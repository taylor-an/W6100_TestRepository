; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\objects\misc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\misc.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\test_[SLAAC-RDNSS] -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\io6Library\Application\loopback -I..\..\Libraries\io6Library\Ethernet -I..\..\Libraries\io6Library\Ethernet\W6100 -I..\..\Libraries\io6Library\Internet\DHCP -I..\..\Libraries\io6Library\Internet\DNS -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\io6Library\Internet\DHCP6 -I.\RTE\_Target_1 -Ic:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ic:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F4XX -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\misc.crf ..\..\Libraries\STM32F4xx_StdPeriph_Driver\src\misc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NVIC_PriorityGroupConfig PROC
;;;111      */
;;;112    void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
000000  4928              LDR      r1,|L1.164|
;;;113    {
;;;114      /* Check the parameters */
;;;115      assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
;;;116      
;;;117      /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
;;;118      SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
000002  4308              ORRS     r0,r0,r1
000004  4928              LDR      r1,|L1.168|
000006  6008              STR      r0,[r1,#0]
;;;119    }
000008  4770              BX       lr
;;;120    
                          ENDP

                  NVIC_Init PROC
;;;129      */
;;;130    void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
00000a  b530              PUSH     {r4,r5,lr}
;;;131    {
;;;132      uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
00000c  230f              MOVS     r3,#0xf
;;;133      
;;;134      /* Check the parameters */
;;;135      assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
;;;136      assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
;;;137      assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
;;;138        
;;;139      if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
00000e  78c2              LDRB     r2,[r0,#3]
;;;140      {
;;;141        /* Compute the Corresponding IRQ Priority --------------------------------*/    
;;;142        tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
;;;143        tmppre = (0x4 - tmppriority);
;;;144        tmpsub = tmpsub >> tmppriority;
;;;145    
;;;146        tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
;;;147        tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
;;;148            
;;;149        tmppriority = tmppriority << 0x04;
;;;150            
;;;151        NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
000010  7801              LDRB     r1,[r0,#0]
;;;152        
;;;153        /* Enable the Selected IRQ Channels --------------------------------------*/
;;;154        NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
000012  2501              MOVS     r5,#1
000014  b1fa              CBZ      r2,|L1.86|
000016  4a24              LDR      r2,|L1.168|
000018  6812              LDR      r2,[r2,#0]            ;142
00001a  f10121e0          ADD      r1,r1,#0xe000e000     ;149
00001e  f40262e0          AND      r2,r2,#0x700          ;142
000022  f5c262e0          RSB      r2,r2,#0x700          ;142
000026  f3c22207          UBFX     r2,r2,#8,#8           ;142
00002a  f1c20404          RSB      r4,r2,#4              ;143
00002e  40d3              LSRS     r3,r3,r2              ;144
000030  7842              LDRB     r2,[r0,#1]            ;146
000032  40a2              LSLS     r2,r2,r4              ;146
000034  7884              LDRB     r4,[r0,#2]            ;147
000036  401c              ANDS     r4,r4,r3              ;147
000038  4314              ORRS     r4,r4,r2              ;147
00003a  0122              LSLS     r2,r4,#4              ;149
00003c  f8812400          STRB     r2,[r1,#0x400]        ;151
000040  7800              LDRB     r0,[r0,#0]
000042  f000011f          AND      r1,r0,#0x1f
000046  408d              LSLS     r5,r5,r1
000048  0940              LSRS     r0,r0,#5
00004a  0080              LSLS     r0,r0,#2
00004c  f10020e0          ADD      r0,r0,#0xe000e000
000050  f8c05100          STR      r5,[r0,#0x100]
;;;155          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;156      }
;;;157      else
;;;158      {
;;;159        /* Disable the Selected IRQ Channels -------------------------------------*/
;;;160        NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
;;;161          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;162      }
;;;163    }
000054  bd30              POP      {r4,r5,pc}
                  |L1.86|
000056  f001001f          AND      r0,r1,#0x1f           ;160
00005a  4085              LSLS     r5,r5,r0              ;160
00005c  0948              LSRS     r0,r1,#5              ;160
00005e  0080              LSLS     r0,r0,#2              ;160
000060  f10020e0          ADD      r0,r0,#0xe000e000     ;160
000064  f8c05180          STR      r5,[r0,#0x180]        ;160
000068  bd30              POP      {r4,r5,pc}
;;;164    
                          ENDP

                  NVIC_SetVectorTable PROC
;;;173      */
;;;174    void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
00006a  4a10              LDR      r2,|L1.172|
;;;175    { 
;;;176      /* Check the parameters */
;;;177      assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
;;;178      assert_param(IS_NVIC_OFFSET(Offset));  
;;;179       
;;;180      SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
00006c  4011              ANDS     r1,r1,r2
00006e  4301              ORRS     r1,r1,r0
000070  480d              LDR      r0,|L1.168|
000072  1f00              SUBS     r0,r0,#4
000074  6001              STR      r1,[r0,#0]
;;;181    }
000076  4770              BX       lr
;;;182    
                          ENDP

                  NVIC_SystemLPConfig PROC
;;;192      */
;;;193    void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
000078  4a0b              LDR      r2,|L1.168|
;;;194    {
;;;195      /* Check the parameters */
;;;196      assert_param(IS_NVIC_LP(LowPowerMode));
;;;197      assert_param(IS_FUNCTIONAL_STATE(NewState));  
;;;198      
;;;199      if (NewState != DISABLE)
;;;200      {
;;;201        SCB->SCR |= LowPowerMode;
00007a  1d12              ADDS     r2,r2,#4
00007c  2900              CMP      r1,#0                 ;199
;;;202      }
;;;203      else
;;;204      {
;;;205        SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
00007e  6811              LDR      r1,[r2,#0]
000080  d001              BEQ      |L1.134|
000082  4301              ORRS     r1,r1,r0              ;201
000084  e000              B        |L1.136|
                  |L1.134|
000086  4381              BICS     r1,r1,r0
                  |L1.136|
000088  6011              STR      r1,[r2,#0]            ;201
;;;206      }
;;;207    }
00008a  4770              BX       lr
;;;208    
                          ENDP

                  SysTick_CLKSourceConfig PROC
;;;216      */
;;;217    void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
00008c  f04f21e0          MOV      r1,#0xe000e000
;;;218    {
;;;219      /* Check the parameters */
;;;220      assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
;;;221      if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
000090  2804              CMP      r0,#4
;;;222      {
;;;223        SysTick->CTRL |= SysTick_CLKSource_HCLK;
;;;224      }
;;;225      else
;;;226      {
;;;227        SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
000092  6908              LDR      r0,[r1,#0x10]
000094  d003              BEQ      |L1.158|
000096  f0200004          BIC      r0,r0,#4
                  |L1.154|
00009a  6108              STR      r0,[r1,#0x10]         ;223
;;;228      }
;;;229    }
00009c  4770              BX       lr
                  |L1.158|
00009e  f0400004          ORR      r0,r0,#4              ;223
0000a2  e7fa              B        |L1.154|
;;;230    
                          ENDP

                  |L1.164|
                          DCD      0x05fa0000
                  |L1.168|
                          DCD      0xe000ed0c
                  |L1.172|
                          DCD      0x1fffff80

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\misc.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_misc_c_d0fc1254____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_misc_c_d0fc1254____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_misc_c_d0fc1254____REVSH|
#line 128
|__asm___6_misc_c_d0fc1254____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
