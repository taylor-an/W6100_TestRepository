; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\objects\addressautoconfig.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\addressautoconfig.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\test_[SLAAC-RDNSS] -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\io6Library\Application\loopback -I..\..\Libraries\io6Library\Ethernet -I..\..\Libraries\io6Library\Ethernet\W6100 -I..\..\Libraries\io6Library\Internet\DHCP -I..\..\Libraries\io6Library\Internet\DNS -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\io6Library\Internet\DHCP6 -I.\RTE\_Target_1 -Ic:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ic:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F4XX -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\addressautoconfig.crf AddressAutoConfig.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  Address_Auto_Config_SLDHCP PROC
;;;6      
;;;7      uint8_t Address_Auto_Config_SLDHCP(uint8_t sn, uint8_t* test_buf)
000000  b530              PUSH     {r4,r5,lr}
;;;8      {
000002  b091              SUB      sp,sp,#0x44
;;;9      	uint8_t result;
;;;10     	uint8_t tmp[16];
;;;11     	uint32_t toggle = 1;
000004  2501              MOVS     r5,#1
;;;12     	uint32_t my_dhcp_retry = 0;
000006  2400              MOVS     r4,#0
;;;13     	
;;;14     	DHCP_init(sn, test_buf);
000008  f7fffffe          BL       DHCP_init
                  |L1.12|
;;;15     
;;;16     	while(1)
;;;17     	{
;;;18             switch(DHCP_run2())
00000c  f7fffffe          BL       DHCP_run2
000010  2800              CMP      r0,#0
000012  d07d              BEQ      |L1.272|
000014  2802              CMP      r0,#2
                  |L1.22|
000016  d07c              BEQ      |L1.274|
000018  2803              CMP      r0,#3
00001a  d0fc              BEQ      |L1.22|
00001c  2804              CMP      r0,#4
00001e  d1f5              BNE      |L1.12|
;;;19             {
;;;20                 case DHCP_IP_ASSIGN:
;;;21                 case DHCP_IP_CHANGED:
;;;22                     /* If this block empty, act with default_ip_assign & default_ip_update  */
;;;23                     //
;;;24                     // This example calls the registered 'my_ip_assign' in the two case.
;;;25                     //
;;;26                     // Add to ...
;;;27                     //
;;;28                     //
;;;29                     toggle = 1;
;;;30                     if(toggle)
;;;31                     {
;;;32                         getGAR(tmp);  printf("> DHCP GW : %d.%d.%d.%d\r\n", tmp[0], tmp[1], tmp[2], tmp[3]);
;;;33                         getSUBR(tmp); printf("> DHCP SN : %d.%d.%d.%d\r\n", tmp[0], tmp[1], tmp[2], tmp[3]);
;;;34                         getSIPR(tmp); printf("> DHCP IP : %d.%d.%d.%d\r\n", tmp[0], tmp[1], tmp[2], tmp[3]);
;;;35                         toggle = 0;
;;;36                         close(0); /* 
;;;37     								If renewal IP address was defferent previous IP address, 
;;;38     								socket becomes to disconnect or close for new connection.
;;;39     								*/
;;;40                     }  						
;;;41                     break;
;;;42                 case DHCP_IP_LEASED:
;;;43                     //
;;;44                     if(toggle)
000020  2d00              CMP      r5,#0
000022  d077              BEQ      |L1.276|
;;;45                     {
;;;46                         getSHAR(tmp);
000024  2206              MOVS     r2,#6
000026  a90d              ADD      r1,sp,#0x34
000028  48f7              LDR      r0,|L1.1032|
00002a  f7fffffe          BL       WIZCHIP_READ_BUF
;;;47     					printf("Mac address : %.2x:%.2x:%.2x:%.2x:%.2x:%.2x \r\n",tmp[0],tmp[1],tmp[2],tmp[3],tmp[4],tmp[5]);
00002e  f89d0037          LDRB     r0,[sp,#0x37]
000032  f89d2039          LDRB     r2,[sp,#0x39]
000036  f89d1038          LDRB     r1,[sp,#0x38]
00003a  e88d0007          STM      sp,{r0-r2}
00003e  f89d3036          LDRB     r3,[sp,#0x36]
000042  f89d2035          LDRB     r2,[sp,#0x35]
000046  f89d1034          LDRB     r1,[sp,#0x34]
00004a  a0f0              ADR      r0,|L1.1036|
00004c  f7fffffe          BL       __2printf
;;;48     					getLLAR(tmp);
000050  2210              MOVS     r2,#0x10
000052  a90d              ADD      r1,sp,#0x34
000054  48f9              LDR      r0,|L1.1084|
000056  f7fffffe          BL       WIZCHIP_READ_BUF
;;;49     					printf("your Link Local IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", tmp[ 0], tmp[ 1], tmp[ 2], tmp[ 3], 
00005a  f89d0040          LDRB     r0,[sp,#0x40]
00005e  ac09              ADD      r4,sp,#0x24
000060  f89d3043          LDRB     r3,[sp,#0x43]
000064  f89d2042          LDRB     r2,[sp,#0x42]
000068  f89d1041          LDRB     r1,[sp,#0x41]
00006c  e884000f          STM      r4,{r0-r3}
000070  f89d003c          LDRB     r0,[sp,#0x3c]
000074  ac05              ADD      r4,sp,#0x14
000076  f89d303f          LDRB     r3,[sp,#0x3f]
00007a  f89d203e          LDRB     r2,[sp,#0x3e]
00007e  f89d103d          LDRB     r1,[sp,#0x3d]
000082  e884000f          STM      r4,{r0-r3}
000086  f89d0038          LDRB     r0,[sp,#0x38]
00008a  ac01              ADD      r4,sp,#4
00008c  f89d303b          LDRB     r3,[sp,#0x3b]
000090  f89d203a          LDRB     r2,[sp,#0x3a]
000094  f89d1039          LDRB     r1,[sp,#0x39]
000098  e884000f          STM      r4,{r0-r3}
00009c  f89d0037          LDRB     r0,[sp,#0x37]
0000a0  9000              STR      r0,[sp,#0]
0000a2  f89d3036          LDRB     r3,[sp,#0x36]
0000a6  f89d2035          LDRB     r2,[sp,#0x35]
0000aa  f89d1034          LDRB     r1,[sp,#0x34]
0000ae  48e4              LDR      r0,|L1.1088|
0000b0  f7fffffe          BL       __2printf
;;;50     																																 tmp[ 4], tmp[ 5], tmp[ 6], tmp[ 7], 
;;;51     																																 tmp[ 8], tmp[ 9], tmp[10], tmp[11], 
;;;52     																																 tmp[12], tmp[13], tmp[14], tmp[15]);
;;;53     					getGUAR(tmp);
0000b4  2210              MOVS     r2,#0x10
0000b6  a90d              ADD      r1,sp,#0x34
0000b8  48e2              LDR      r0,|L1.1092|
0000ba  f7fffffe          BL       WIZCHIP_READ_BUF
;;;54     					printf("your Global IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", tmp[ 0], tmp[ 1], tmp[ 2], tmp[ 3], 
0000be  f89d0040          LDRB     r0,[sp,#0x40]
0000c2  ac09              ADD      r4,sp,#0x24
0000c4  f89d3043          LDRB     r3,[sp,#0x43]
0000c8  f89d2042          LDRB     r2,[sp,#0x42]
0000cc  f89d1041          LDRB     r1,[sp,#0x41]
0000d0  e884000f          STM      r4,{r0-r3}
0000d4  f89d003c          LDRB     r0,[sp,#0x3c]
0000d8  ac05              ADD      r4,sp,#0x14
0000da  f89d303f          LDRB     r3,[sp,#0x3f]
0000de  f89d203e          LDRB     r2,[sp,#0x3e]
0000e2  f89d103d          LDRB     r1,[sp,#0x3d]
0000e6  e884000f          STM      r4,{r0-r3}
0000ea  f89d0038          LDRB     r0,[sp,#0x38]
0000ee  ac01              ADD      r4,sp,#4
0000f0  f89d303b          LDRB     r3,[sp,#0x3b]
0000f4  f89d203a          LDRB     r2,[sp,#0x3a]
0000f8  f89d1039          LDRB     r1,[sp,#0x39]
0000fc  e884000f          STM      r4,{r0-r3}
000100  f89d0037          LDRB     r0,[sp,#0x37]
000104  9000              STR      r0,[sp,#0]
000106  f89d3036          LDRB     r3,[sp,#0x36]
00010a  f89d2035          LDRB     r2,[sp,#0x35]
00010e  e002              B        |L1.278|
                  |L1.272|
000110  e091              B        |L1.566|
                  |L1.274|
000112  e058              B        |L1.454|
                  |L1.276|
000114  e054              B        |L1.448|
                  |L1.278|
000116  f89d1034          LDRB     r1,[sp,#0x34]
00011a  48cb              LDR      r0,|L1.1096|
00011c  f7fffffe          BL       __2printf
;;;55     																															 tmp[ 4], tmp[ 5], tmp[ 6], tmp[ 7], 
;;;56     																															 tmp[ 8], tmp[ 9], tmp[10], tmp[11], 
;;;57     																															 tmp[12], tmp[13], tmp[14], tmp[15]);
;;;58     					getGA6R(tmp);
000120  2210              MOVS     r2,#0x10
000122  a90d              ADD      r1,sp,#0x34
000124  48c9              LDR      r0,|L1.1100|
000126  f7fffffe          BL       WIZCHIP_READ_BUF
;;;59     					printf("your Gateway IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", tmp[ 0], tmp[ 1], tmp[ 2], tmp[ 3], 
00012a  f89d0040          LDRB     r0,[sp,#0x40]
00012e  ac09              ADD      r4,sp,#0x24
000130  f89d3043          LDRB     r3,[sp,#0x43]
000134  f89d2042          LDRB     r2,[sp,#0x42]
000138  f89d1041          LDRB     r1,[sp,#0x41]
00013c  e884000f          STM      r4,{r0-r3}
000140  f89d003c          LDRB     r0,[sp,#0x3c]
000144  ac05              ADD      r4,sp,#0x14
000146  f89d303f          LDRB     r3,[sp,#0x3f]
00014a  f89d203e          LDRB     r2,[sp,#0x3e]
00014e  f89d103d          LDRB     r1,[sp,#0x3d]
000152  e884000f          STM      r4,{r0-r3}
000156  f89d0038          LDRB     r0,[sp,#0x38]
00015a  ac01              ADD      r4,sp,#4
00015c  f89d303b          LDRB     r3,[sp,#0x3b]
000160  f89d203a          LDRB     r2,[sp,#0x3a]
000164  f89d1039          LDRB     r1,[sp,#0x39]
000168  e884000f          STM      r4,{r0-r3}
00016c  f89d0037          LDRB     r0,[sp,#0x37]
000170  9000              STR      r0,[sp,#0]
000172  f89d3036          LDRB     r3,[sp,#0x36]
000176  f89d2035          LDRB     r2,[sp,#0x35]
00017a  f89d1034          LDRB     r1,[sp,#0x34]
00017e  48b4              LDR      r0,|L1.1104|
000180  f7fffffe          BL       __2printf
;;;60     																															  tmp[ 4], tmp[ 5], tmp[ 6], tmp[ 7], 
;;;61     																															  tmp[ 8], tmp[ 9], tmp[10], tmp[11], 
;;;62     																															  tmp[12], tmp[13], tmp[14], tmp[15]);	
;;;63     					
;;;64     					printf("your DNSv6 is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", DNS6_Address[ 0], DNS6_Address[ 1], DNS6_Address[ 2], DNS6_Address[ 3], 
000184  48b3              LDR      r0,|L1.1108|
000186  ad09              ADD      r5,sp,#0x24
000188  7b01              LDRB     r1,[r0,#0xc]  ; DNS6_Address
00018a  7bc4              LDRB     r4,[r0,#0xf]  ; DNS6_Address
00018c  7b83              LDRB     r3,[r0,#0xe]  ; DNS6_Address
00018e  7b42              LDRB     r2,[r0,#0xd]  ; DNS6_Address
000190  e885001e          STM      r5,{r1-r4}
000194  7a01              LDRB     r1,[r0,#8]  ; DNS6_Address
000196  ad05              ADD      r5,sp,#0x14
000198  7ac4              LDRB     r4,[r0,#0xb]  ; DNS6_Address
00019a  7a83              LDRB     r3,[r0,#0xa]  ; DNS6_Address
00019c  7a42              LDRB     r2,[r0,#9]  ; DNS6_Address
00019e  e885001e          STM      r5,{r1-r4}
0001a2  7901              LDRB     r1,[r0,#4]  ; DNS6_Address
0001a4  ad01              ADD      r5,sp,#4
0001a6  79c4              LDRB     r4,[r0,#7]  ; DNS6_Address
0001a8  7983              LDRB     r3,[r0,#6]  ; DNS6_Address
0001aa  7942              LDRB     r2,[r0,#5]  ; DNS6_Address
0001ac  e885001e          STM      r5,{r1-r4}
0001b0  78c1              LDRB     r1,[r0,#3]  ; DNS6_Address
0001b2  9100              STR      r1,[sp,#0]
0001b4  7883              LDRB     r3,[r0,#2]  ; DNS6_Address
0001b6  7842              LDRB     r2,[r0,#1]  ; DNS6_Address
0001b8  7801              LDRB     r1,[r0,#0]  ; DNS6_Address
0001ba  48a7              LDR      r0,|L1.1112|
0001bc  f7fffffe          BL       __2printf
                  |L1.448|
;;;65     																														 DNS6_Address[ 4], DNS6_Address[ 5], DNS6_Address[ 6], DNS6_Address[ 7], 
;;;66     																														 DNS6_Address[ 8], DNS6_Address[ 9], DNS6_Address[10], DNS6_Address[11], 
;;;67     																														 DNS6_Address[12], DNS6_Address[13], DNS6_Address[14], DNS6_Address[15]);
;;;68                         toggle = 0;
;;;69                     }
;;;70                     return 1;
0001c0  2001              MOVS     r0,#1
                  |L1.450|
;;;71     
;;;72                 case DHCP_FAILED:
;;;73                     /* ===== Example pseudo code =====  */
;;;74                     // The below code can be replaced your code or omitted.
;;;75                     // if omitted, retry to process DHCP
;;;76                     my_dhcp_retry++;
;;;77                     if(my_dhcp_retry > MY_MAX_DHCP_RETRY)
;;;78                     {	
;;;79     #if DEBUG_MODE != DEBUG_NO
;;;80                         printf(">> DHCP %d Failed\r\n",my_dhcp_retry);
;;;81     #endif
;;;82                         my_dhcp_retry = 0;
;;;83                         DHCP_stop();      // if restart, recall DHCP_init()
;;;84                     }
;;;85                     break;
;;;86                 default:
;;;87                     break;
;;;88             }	
;;;89     
;;;90     
;;;91         }
;;;92     	
;;;93     	return result;
;;;94     }
0001c2  b011              ADD      sp,sp,#0x44
0001c4  bd30              POP      {r4,r5,pc}
                  |L1.454|
0001c6  2204              MOVS     r2,#4                 ;32
0001c8  a90d              ADD      r1,sp,#0x34           ;32
0001ca  48a4              LDR      r0,|L1.1116|
0001cc  f7fffffe          BL       WIZCHIP_READ_BUF
0001d0  f89d0037          LDRB     r0,[sp,#0x37]         ;32
0001d4  9000              STR      r0,[sp,#0]            ;32
0001d6  f89d3036          LDRB     r3,[sp,#0x36]         ;32
0001da  f89d2035          LDRB     r2,[sp,#0x35]         ;32
0001de  f89d1034          LDRB     r1,[sp,#0x34]         ;32
0001e2  a09f              ADR      r0,|L1.1120|
0001e4  f7fffffe          BL       __2printf
0001e8  2204              MOVS     r2,#4                 ;33
0001ea  a90d              ADD      r1,sp,#0x34           ;33
0001ec  48a3              LDR      r0,|L1.1148|
0001ee  f7fffffe          BL       WIZCHIP_READ_BUF
0001f2  f89d0037          LDRB     r0,[sp,#0x37]         ;33
0001f6  9000              STR      r0,[sp,#0]            ;33
0001f8  f89d3036          LDRB     r3,[sp,#0x36]         ;33
0001fc  f89d2035          LDRB     r2,[sp,#0x35]         ;33
000200  f89d1034          LDRB     r1,[sp,#0x34]         ;33
000204  a09e              ADR      r0,|L1.1152|
000206  f7fffffe          BL       __2printf
00020a  2204              MOVS     r2,#4                 ;34
00020c  a90d              ADD      r1,sp,#0x34           ;34
00020e  48a3              LDR      r0,|L1.1180|
000210  f7fffffe          BL       WIZCHIP_READ_BUF
000214  f89d0037          LDRB     r0,[sp,#0x37]         ;34
000218  9000              STR      r0,[sp,#0]            ;34
00021a  f89d3036          LDRB     r3,[sp,#0x36]         ;34
00021e  f89d2035          LDRB     r2,[sp,#0x35]         ;34
000222  f89d1034          LDRB     r1,[sp,#0x34]         ;34
000226  a09e              ADR      r0,|L1.1184|
000228  f7fffffe          BL       __2printf
00022c  2500              MOVS     r5,#0                 ;35
00022e  4628              MOV      r0,r5                 ;36
000230  f7fffffe          BL       close
                  |L1.564|
000234  e6ea              B        |L1.12|
                  |L1.566|
000236  1c64              ADDS     r4,r4,#1              ;30
000238  2c03              CMP      r4,#3                 ;77
00023a  d9fb              BLS      |L1.564|
00023c  2400              MOVS     r4,#0                 ;82
00023e  f7fffffe          BL       DHCP_stop
000242  e6e3              B        |L1.12|
;;;95     
                          ENDP

                  Address_Auto_Config_SFDHCP PROC
;;;96     uint8_t Address_Auto_Config_SFDHCP(uint8_t sn, uint8_t* test_buf)
000244  b530              PUSH     {r4,r5,lr}
;;;97     {
000246  b091              SUB      sp,sp,#0x44
;;;98     	uint8_t result;
;;;99     	uint8_t tmp[16];
;;;100    	uint32_t toggle = 1;
000248  2501              MOVS     r5,#1
;;;101    	uint32_t my_dhcp_retry = 0;
00024a  2400              MOVS     r4,#0
;;;102    	
;;;103    	DHCP_init(sn, test_buf);
00024c  f7fffffe          BL       DHCP_init
                  |L1.592|
;;;104    
;;;105    	while(1)
;;;106    	{
;;;107            switch(DHCP_run())
000250  f7fffffe          BL       DHCP_run
000254  2800              CMP      r0,#0
000256  d07d              BEQ      |L1.852|
000258  2802              CMP      r0,#2
                  |L1.602|
00025a  d07c              BEQ      |L1.854|
00025c  2803              CMP      r0,#3
00025e  d0fc              BEQ      |L1.602|
000260  2804              CMP      r0,#4
000262  d1f5              BNE      |L1.592|
;;;108            {
;;;109                case DHCP_IP_ASSIGN:
;;;110                case DHCP_IP_CHANGED:
;;;111                    /* If this block empty, act with default_ip_assign & default_ip_update  */
;;;112                    //
;;;113                    // This example calls the registered 'my_ip_assign' in the two case.
;;;114                    //
;;;115                    // Add to ...
;;;116                    //
;;;117                    //
;;;118                    toggle = 1;
;;;119                    if(toggle)
;;;120                    {
;;;121    //                    getGAR(tmp);  printf("> DHCP GW : %d.%d.%d.%d\r\n", tmp[0], tmp[1], tmp[2], tmp[3]);
;;;122    //                    getSUBR(tmp); printf("> DHCP SN : %d.%d.%d.%d\r\n", tmp[0], tmp[1], tmp[2], tmp[3]);
;;;123    //                    getSIPR(tmp); printf("> DHCP IP : %d.%d.%d.%d\r\n", tmp[0], tmp[1], tmp[2], tmp[3]);
;;;124                        toggle = 0;
;;;125                        close(0); /* 
;;;126    								If renewal IP address was defferent previous IP address, 
;;;127    								socket becomes to disconnect or close for new connection.
;;;128    								*/
;;;129                    }  						
;;;130                    break;
;;;131                case DHCP_IP_LEASED:
;;;132                    //
;;;133                    if(toggle)
000264  2d00              CMP      r5,#0
000266  d077              BEQ      |L1.856|
;;;134                    {
;;;135                        getSHAR(tmp);
000268  2206              MOVS     r2,#6
00026a  a90d              ADD      r1,sp,#0x34
00026c  4866              LDR      r0,|L1.1032|
00026e  f7fffffe          BL       WIZCHIP_READ_BUF
;;;136    					printf("Mac address : %.2x:%.2x:%.2x:%.2x:%.2x:%.2x \r\n",tmp[0],tmp[1],tmp[2],tmp[3],tmp[4],tmp[5]);
000272  f89d0037          LDRB     r0,[sp,#0x37]
000276  f89d2039          LDRB     r2,[sp,#0x39]
00027a  f89d1038          LDRB     r1,[sp,#0x38]
00027e  e88d0007          STM      sp,{r0-r2}
000282  f89d3036          LDRB     r3,[sp,#0x36]
000286  f89d2035          LDRB     r2,[sp,#0x35]
00028a  f89d1034          LDRB     r1,[sp,#0x34]
00028e  a05f              ADR      r0,|L1.1036|
000290  f7fffffe          BL       __2printf
;;;137    					getLLAR(tmp);
000294  2210              MOVS     r2,#0x10
000296  a90d              ADD      r1,sp,#0x34
000298  4868              LDR      r0,|L1.1084|
00029a  f7fffffe          BL       WIZCHIP_READ_BUF
;;;138    					printf("your Link Local IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", tmp[ 0], tmp[ 1], tmp[ 2], tmp[ 3], 
00029e  f89d0040          LDRB     r0,[sp,#0x40]
0002a2  ac09              ADD      r4,sp,#0x24
0002a4  f89d3043          LDRB     r3,[sp,#0x43]
0002a8  f89d2042          LDRB     r2,[sp,#0x42]
0002ac  f89d1041          LDRB     r1,[sp,#0x41]
0002b0  e884000f          STM      r4,{r0-r3}
0002b4  f89d003c          LDRB     r0,[sp,#0x3c]
0002b8  ac05              ADD      r4,sp,#0x14
0002ba  f89d303f          LDRB     r3,[sp,#0x3f]
0002be  f89d203e          LDRB     r2,[sp,#0x3e]
0002c2  f89d103d          LDRB     r1,[sp,#0x3d]
0002c6  e884000f          STM      r4,{r0-r3}
0002ca  f89d0038          LDRB     r0,[sp,#0x38]
0002ce  ac01              ADD      r4,sp,#4
0002d0  f89d303b          LDRB     r3,[sp,#0x3b]
0002d4  f89d203a          LDRB     r2,[sp,#0x3a]
0002d8  f89d1039          LDRB     r1,[sp,#0x39]
0002dc  e884000f          STM      r4,{r0-r3}
0002e0  f89d0037          LDRB     r0,[sp,#0x37]
0002e4  9000              STR      r0,[sp,#0]
0002e6  f89d3036          LDRB     r3,[sp,#0x36]
0002ea  f89d2035          LDRB     r2,[sp,#0x35]
0002ee  f89d1034          LDRB     r1,[sp,#0x34]
0002f2  4853              LDR      r0,|L1.1088|
0002f4  f7fffffe          BL       __2printf
;;;139    																																 tmp[ 4], tmp[ 5], tmp[ 6], tmp[ 7], 
;;;140    																																 tmp[ 8], tmp[ 9], tmp[10], tmp[11], 
;;;141    																																 tmp[12], tmp[13], tmp[14], tmp[15]);
;;;142    					getGUAR(tmp);
0002f8  2210              MOVS     r2,#0x10
0002fa  a90d              ADD      r1,sp,#0x34
0002fc  4851              LDR      r0,|L1.1092|
0002fe  f7fffffe          BL       WIZCHIP_READ_BUF
;;;143    					printf("your Global IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", tmp[ 0], tmp[ 1], tmp[ 2], tmp[ 3], 
000302  f89d0040          LDRB     r0,[sp,#0x40]
000306  ac09              ADD      r4,sp,#0x24
000308  f89d3043          LDRB     r3,[sp,#0x43]
00030c  f89d2042          LDRB     r2,[sp,#0x42]
000310  f89d1041          LDRB     r1,[sp,#0x41]
000314  e884000f          STM      r4,{r0-r3}
000318  f89d003c          LDRB     r0,[sp,#0x3c]
00031c  ac05              ADD      r4,sp,#0x14
00031e  f89d303f          LDRB     r3,[sp,#0x3f]
000322  f89d203e          LDRB     r2,[sp,#0x3e]
000326  f89d103d          LDRB     r1,[sp,#0x3d]
00032a  e884000f          STM      r4,{r0-r3}
00032e  f89d0038          LDRB     r0,[sp,#0x38]
000332  ac01              ADD      r4,sp,#4
000334  f89d303b          LDRB     r3,[sp,#0x3b]
000338  f89d203a          LDRB     r2,[sp,#0x3a]
00033c  f89d1039          LDRB     r1,[sp,#0x39]
000340  e884000f          STM      r4,{r0-r3}
000344  f89d0037          LDRB     r0,[sp,#0x37]
000348  9000              STR      r0,[sp,#0]
00034a  f89d3036          LDRB     r3,[sp,#0x36]
00034e  f89d2035          LDRB     r2,[sp,#0x35]
000352  e002              B        |L1.858|
                  |L1.852|
000354  e0b7              B        |L1.1222|
                  |L1.854|
000356  e0b1              B        |L1.1212|
                  |L1.856|
000358  e054              B        |L1.1028|
                  |L1.858|
00035a  f89d1034          LDRB     r1,[sp,#0x34]
00035e  483a              LDR      r0,|L1.1096|
000360  f7fffffe          BL       __2printf
;;;144    																															 tmp[ 4], tmp[ 5], tmp[ 6], tmp[ 7], 
;;;145    																															 tmp[ 8], tmp[ 9], tmp[10], tmp[11], 
;;;146    																															 tmp[12], tmp[13], tmp[14], tmp[15]);
;;;147    					getGA6R(tmp);
000364  2210              MOVS     r2,#0x10
000366  a90d              ADD      r1,sp,#0x34
000368  4838              LDR      r0,|L1.1100|
00036a  f7fffffe          BL       WIZCHIP_READ_BUF
;;;148    					printf("your Gateway IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", tmp[ 0], tmp[ 1], tmp[ 2], tmp[ 3], 
00036e  f89d0040          LDRB     r0,[sp,#0x40]
000372  ac09              ADD      r4,sp,#0x24
000374  f89d3043          LDRB     r3,[sp,#0x43]
000378  f89d2042          LDRB     r2,[sp,#0x42]
00037c  f89d1041          LDRB     r1,[sp,#0x41]
000380  e884000f          STM      r4,{r0-r3}
000384  f89d003c          LDRB     r0,[sp,#0x3c]
000388  ac05              ADD      r4,sp,#0x14
00038a  f89d303f          LDRB     r3,[sp,#0x3f]
00038e  f89d203e          LDRB     r2,[sp,#0x3e]
000392  f89d103d          LDRB     r1,[sp,#0x3d]
000396  e884000f          STM      r4,{r0-r3}
00039a  f89d0038          LDRB     r0,[sp,#0x38]
00039e  ac01              ADD      r4,sp,#4
0003a0  f89d303b          LDRB     r3,[sp,#0x3b]
0003a4  f89d203a          LDRB     r2,[sp,#0x3a]
0003a8  f89d1039          LDRB     r1,[sp,#0x39]
0003ac  e884000f          STM      r4,{r0-r3}
0003b0  f89d0037          LDRB     r0,[sp,#0x37]
0003b4  9000              STR      r0,[sp,#0]
0003b6  f89d3036          LDRB     r3,[sp,#0x36]
0003ba  f89d2035          LDRB     r2,[sp,#0x35]
0003be  f89d1034          LDRB     r1,[sp,#0x34]
0003c2  4823              LDR      r0,|L1.1104|
0003c4  f7fffffe          BL       __2printf
;;;149    																															  tmp[ 4], tmp[ 5], tmp[ 6], tmp[ 7], 
;;;150    																															  tmp[ 8], tmp[ 9], tmp[10], tmp[11], 
;;;151    																															  tmp[12], tmp[13], tmp[14], tmp[15]);	
;;;152    					
;;;153    					printf("your DNSv6 is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n", DNS6_Address[ 0], DNS6_Address[ 1], DNS6_Address[ 2], DNS6_Address[ 3], 
0003c8  4822              LDR      r0,|L1.1108|
0003ca  ad09              ADD      r5,sp,#0x24
0003cc  7b01              LDRB     r1,[r0,#0xc]  ; DNS6_Address
0003ce  7bc4              LDRB     r4,[r0,#0xf]  ; DNS6_Address
0003d0  7b83              LDRB     r3,[r0,#0xe]  ; DNS6_Address
0003d2  7b42              LDRB     r2,[r0,#0xd]  ; DNS6_Address
0003d4  e885001e          STM      r5,{r1-r4}
0003d8  7a01              LDRB     r1,[r0,#8]  ; DNS6_Address
0003da  ad05              ADD      r5,sp,#0x14
0003dc  7ac4              LDRB     r4,[r0,#0xb]  ; DNS6_Address
0003de  7a83              LDRB     r3,[r0,#0xa]  ; DNS6_Address
0003e0  7a42              LDRB     r2,[r0,#9]  ; DNS6_Address
0003e2  e885001e          STM      r5,{r1-r4}
0003e6  7901              LDRB     r1,[r0,#4]  ; DNS6_Address
0003e8  ad01              ADD      r5,sp,#4
0003ea  79c4              LDRB     r4,[r0,#7]  ; DNS6_Address
0003ec  7983              LDRB     r3,[r0,#6]  ; DNS6_Address
0003ee  7942              LDRB     r2,[r0,#5]  ; DNS6_Address
0003f0  e885001e          STM      r5,{r1-r4}
0003f4  78c1              LDRB     r1,[r0,#3]  ; DNS6_Address
0003f6  9100              STR      r1,[sp,#0]
0003f8  7883              LDRB     r3,[r0,#2]  ; DNS6_Address
0003fa  7842              LDRB     r2,[r0,#1]  ; DNS6_Address
0003fc  7801              LDRB     r1,[r0,#0]  ; DNS6_Address
0003fe  4816              LDR      r0,|L1.1112|
000400  f7fffffe          BL       __2printf
                  |L1.1028|
;;;154    																														 DNS6_Address[ 4], DNS6_Address[ 5], DNS6_Address[ 6], DNS6_Address[ 7], 
;;;155    																														 DNS6_Address[ 8], DNS6_Address[ 9], DNS6_Address[10], DNS6_Address[11], 
;;;156    																														 DNS6_Address[12], DNS6_Address[13], DNS6_Address[14], DNS6_Address[15]);
;;;157                        toggle = 0;
;;;158                    }
;;;159                    return 1;
000404  2001              MOVS     r0,#1
;;;160    
;;;161                case DHCP_FAILED:
;;;162                    /* ===== Example pseudo code =====  */
;;;163                    // The below code can be replaced your code or omitted.
;;;164                    // if omitted, retry to process DHCP
;;;165                    my_dhcp_retry++;
;;;166                    if(my_dhcp_retry > MY_MAX_DHCP_RETRY)
;;;167                    {	
;;;168    #if DEBUG_MODE != DEBUG_NO
;;;169                        printf(">> DHCP %d Failed\r\n",my_dhcp_retry);
;;;170    #endif
;;;171                        my_dhcp_retry = 0;
;;;172                        DHCP_stop();      // if restart, recall DHCP_init()
;;;173                        return 0;
;;;174                    }
;;;175                    break;
;;;176                default:
;;;177                    break;
;;;178            }	
;;;179    
;;;180    
;;;181        }
;;;182    	
;;;183    	return result;
;;;184    }
000406  e6dc              B        |L1.450|
                  |L1.1032|
                          DCD      0x60412000
                  |L1.1036|
00040c  4d616320          DCB      "Mac address : %.2x:%.2x:%.2x:%.2x:%.2x:%.2x "
000410  61646472
000414  65737320
000418  3a20252e
00041c  32783a25
000420  2e32783a
000424  252e3278
000428  3a252e32
00042c  783a252e
000430  32783a25
000434  2e327820
                  |L1.1080|
000438  0d0a00            DCB      "\r\n",0
00043b  00                DCB      0
                  |L1.1084|
                          DCD      0x60414000
                  |L1.1088|
                          DCD      ||.conststring||
                  |L1.1092|
                          DCD      0x60415000
                  |L1.1096|
                          DCD      ||.conststring||+0x64
                  |L1.1100|
                          DCD      0x60417000
                  |L1.1104|
                          DCD      ||.conststring||+0xc4
                  |L1.1108|
                          DCD      DNS6_Address
                  |L1.1112|
                          DCD      ||.conststring||+0x124
                  |L1.1116|
                          DCD      0x60413000
                  |L1.1120|
000460  3e204448          DCB      "> DHCP GW : %d.%d.%d.%d\r\n",0
000464  43502047
000468  57203a20
00046c  25642e25
000470  642e2564
000474  2e25640d
000478  0a00    
00047a  00                DCB      0
00047b  00                DCB      0
                  |L1.1148|
                          DCD      0x60413400
                  |L1.1152|
000480  3e204448          DCB      "> DHCP SN : %d.%d.%d.%d\r\n",0
000484  43502053
000488  4e203a20
00048c  25642e25
000490  642e2564
000494  2e25640d
000498  0a00    
00049a  00                DCB      0
00049b  00                DCB      0
                  |L1.1180|
                          DCD      0x60413800
                  |L1.1184|
0004a0  3e204448          DCB      "> DHCP IP : %d.%d.%d.%d\r\n",0
0004a4  43502049
0004a8  50203a20
0004ac  25642e25
0004b0  642e2564
0004b4  2e25640d
0004b8  0a00    
0004ba  00                DCB      0
0004bb  00                DCB      0
                  |L1.1212|
0004bc  2500              MOVS     r5,#0                 ;124
0004be  4628              MOV      r0,r5                 ;125
0004c0  f7fffffe          BL       close
                  |L1.1220|
0004c4  e6c4              B        |L1.592|
                  |L1.1222|
0004c6  1c64              ADDS     r4,r4,#1              ;119
0004c8  2c03              CMP      r4,#3                 ;166
0004ca  d9fb              BLS      |L1.1220|
0004cc  f7fffffe          BL       DHCP_stop
0004d0  2000              MOVS     r0,#0                 ;173
0004d2  e676              B        |L1.450|
;;;185    
                          ENDP

                  Address_Auto_Config_RA PROC
;;;186    uint8_t Address_Auto_Config_RA(uint8_t sn, uint8_t *icmpbuf, uint16_t buf_size)
0004d4  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;187    {
0004d8  b09c              SUB      sp,sp,#0x70
;;;188    	uint8_t result;
;;;189    	
;;;190    	uint16_t size;
;;;191    	uint8_t  destip[16];
;;;192        uint16_t destport;
;;;193    	uint8_t addr_len, o_len;
;;;194    	uint8_t flags;
;;;195    	
;;;196    	uint8_t * p;
;;;197    	uint8_t * e;
;;;198    	int i;
;;;199    	uint8_t o_type, type, code, RA_flag, MO_flag;//, O_flag;
;;;200    	uint16_t Router_lifetime;
;;;201    	uint32_t Reachable_time, Retrans_time;
;;;202    	uint32_t end_point;
;;;203    	uint8_t prefix_len, pi_flag;
;;;204    	uint32_t validtime, prefertime, dnstime;
;;;205    	uint8_t prefix[16];
;;;206    	uint8_t subnet[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
0004da  2000              MOVS     r0,#0
0004dc  9011              STR      r0,[sp,#0x44]
0004de  9012              STR      r0,[sp,#0x48]
0004e0  9013              STR      r0,[sp,#0x4c]
;;;207    
;;;208    	#if (AutoConfig_debug == debug_on)
;;;209    	printf("\n\n\n================================================================\r\n");
0004e2  9014              STR      r0,[sp,#0x50]
0004e4  4691              MOV      r9,r2                 ;187
0004e6  460e              MOV      r6,r1                 ;187
0004e8  48fb              LDR      r0,|L1.2264|
0004ea  f7fffffe          BL       __2printf
;;;210        printf("==================== RQ_AUTO_RS_Send TEST_START ================\r\n");
0004ee  48fb              LDR      r0,|L1.2268|
0004f0  f7fffffe          BL       __2printf
;;;211        printf("================================================================\r\n");
0004f4  48fa              LDR      r0,|L1.2272|
0004f6  f7fffffe          BL       __2printf
;;;212    	#endif
;;;213    
;;;214    	if(getSLCR() != 0x00) //check clear CMD
0004fa  4cfa              LDR      r4,|L1.2276|
0004fc  4620              MOV      r0,r4
0004fe  f7fffffe          BL       WIZCHIP_READ
000502  b130              CBZ      r0,|L1.1298|
;;;215        {
;;;216    		#if (AutoConfig_debug == debug_on)
;;;217            printf("ERROR : RQCMD is not clear\r\n");
000504  a0f8              ADR      r0,|L1.2280|
000506  f7fffffe          BL       __2printf
;;;218    		#endif
;;;219            result = ERROR_SLCMD;
00050a  20fe              MOVS     r0,#0xfe
                  |L1.1292|
;;;220    		return result;
;;;221        }
;;;222        
;;;223    	setICMP6BLKR(ICMP6BLKR_RA);
;;;224    	setSn_PNR(sn, PROTOCOL_NUM_ICMPv6); //ICMPv6 : 58
;;;225    	socket(sn, Sn_MR_IPRAW6, 0, 0);
;;;226    	
;;;227    	#if (AutoConfig_debug == debug_on)
;;;228    	printf("Sn_SR : %x \r\n",getSn_SR(sn));
;;;229    	#endif
;;;230    	
;;;231    	setSLRTR(4000);
;;;232    	setSLRCR(0);
;;;233    	
;;;234    	setSLCR(SLCR_RS);
;;;235    	#if (AutoConfig_debug == debug_on)
;;;236        printf("Wait SLIR.....\r\n");
;;;237    	#endif
;;;238    	//printf("p : %x , *p : %x , RX_RSR : %x \r\n", p, *p , getSn_RX_RSR(sn));
;;;239    	//delay_ms(1000);
;;;240    	do
;;;241    	{
;;;242    		if(getSn_RX_RSR(sn) > 0)
;;;243    		{
;;;244    			//size = recvfrom(sn, icmpbuf, size, destip, &destport, &addr_len);
;;;245    			size = recvfrom(sn, icmpbuf, buf_size, destip, &destport, &addr_len);
;;;246    			printf("after addr_len : %x, size : %x \r\n",addr_len,size);
;;;247    			for(i=0; i<size; i++){
;;;248    				printf("%.2x",icmpbuf[i]);
;;;249    				printf(" ");
;;;250    				if((i+1)%8==0)
;;;251    					printf("\r\n");
;;;252    			}
;;;253    			printf("\r\n");
;;;254    			printf("recvfrom IP : %x%x:%x%x:%x%x:%x%x:%x%x:%x%x:%x%x:%x%x \r\n"
;;;255    			             ,destip[ 0],destip[ 1],destip[ 2],destip[ 3],destip[ 4],destip[ 5],destip[ 6],destip[ 7]
;;;256    			             ,destip[ 8],destip[ 9],destip[10],destip[11],destip[12],destip[13],destip[14],destip[15]);
;;;257    			NETUNLOCK();
;;;258    			setGA6R(destip);
;;;259    			NETLOCK();
;;;260    		}
;;;261    		
;;;262    		p = icmpbuf;		
;;;263    	}while(*p != ROUTER_ADVERTISEMENT);
;;;264    	e = p + size;
;;;265    	switch ( *p ) {
;;;266    		case ROUTER_ADVERTISEMENT : {
;;;267    			printf("RA\r\n");
;;;268    			type = *p++;
;;;269    			printf("type : %x \r\n",type);
;;;270    			code = *p++;
;;;271    			printf("code : %x \r\n",code);
;;;272    			p++;p++;//checksum
;;;273    			p++;//Cur hop limit
;;;274    			RA_flag = *p++;
;;;275    			printf("RA_flag : %x \r\n",RA_flag);
;;;276    			Router_lifetime = *p++<<8;
;;;277    			Router_lifetime = Router_lifetime + (*p++);
;;;278    			printf("Router_lifetime : %d s \r\n",Router_lifetime);
;;;279    			Reachable_time = *p++<<24;
;;;280    			Reachable_time = Reachable_time + (*p++<<16);
;;;281    			Reachable_time = Reachable_time + (*p++<<8);
;;;282    			Reachable_time = Reachable_time + (*p++);
;;;283    			printf("Reachable_time : %d ms \r\n",Reachable_time);
;;;284    			Retrans_time = *p++<<24;
;;;285    			Retrans_time = Retrans_time + (*p++<<16);
;;;286    			Retrans_time = Retrans_time + (*p++<<8);
;;;287    			Retrans_time = Retrans_time + (*p++);
;;;288    			printf("Retrans_time : %d ms \r\n",Retrans_time);
;;;289    			
;;;290    			while( p < e ) {
;;;291    				switch ( *p ) {
;;;292    					case RAO_SLLA : {
;;;293    						o_type = *p++;
;;;294    						printf("Option Type : %d (Source LLA) \r\n",o_type);
;;;295    						o_len = (*p++)*8;
;;;296    						printf("Option length : %d \r\n",o_len);
;;;297    						p += (o_len-2);
;;;298    						break;
;;;299    					}
;;;300    					case RAO_TLLA : {
;;;301    						o_type = *p++;
;;;302    						printf("Option Type : %d (Target LLA) \r\n",o_type);
;;;303    						o_len = (*p++)*8;
;;;304    						printf("Option length : %d \r\n",o_len);
;;;305    						p += (o_len-2);
;;;306    						break;
;;;307    					}
;;;308    					case RAO_PI : {
;;;309    						o_type = *p++;
;;;310    						printf("Option Type : %d (Prefix information) \r\n",o_type);
;;;311    						o_len = (*p++)*8;
;;;312    						printf("Option length : %d \r\n",o_len);
;;;313    						end_point = (uint32_t)p - 2 + o_len;
;;;314    						prefix_len = *p++;
;;;315    						printf("Prefix Length : %d \r\n", prefix_len);
;;;316    						pi_flag = *p++;
;;;317    						printf("Prefix Information Flag : %.2x \r\n", pi_flag);
;;;318    						validtime = (*p++<<24);
;;;319    						validtime += (*p++<<16);
;;;320    						validtime += (*p++<<8);
;;;321    						validtime += (*p++);
;;;322    						printf("valid lifetime : %d \r\n", validtime);
;;;323    						prefertime = (*p++<<24);
;;;324    						prefertime += (*p++<<16);
;;;325    						prefertime += (*p++<<8);
;;;326    						prefertime += (*p++);
;;;327    						printf("preferred lifetime : %d \r\n", prefertime);
;;;328    						p++;p++;p++;p++;//reserved
;;;329    						getLLAR(prefix);
;;;330    						
;;;331    						for(i=0; i<prefix_len/8; i++)
;;;332    						{
;;;333    							prefix[i] = *p++;
;;;334    							if((prefix_len % 8)==0)
;;;335    							{
;;;336    								subnet[i] = 0xFF;
;;;337    							}
;;;338    						}
;;;339    						NETUNLOCK();
;;;340    						setGUAR(prefix);
;;;341    						setSUB6R(subnet);
;;;342    						NETLOCK();
;;;343    						while((uint32_t)p != end_point)
;;;344    						{
;;;345    							p++;
;;;346    						}
;;;347    						printf("prefix : ");
;;;348    						for(i=0; i<prefix_len/8; i++){
;;;349    							printf("%.2x",prefix[i]);
;;;350    							if(1==(i%2))
;;;351    								printf(":");
;;;352    						}
;;;353    						printf(":\r\n");
;;;354    						break;
;;;355    					}
;;;356    					case RAO_RH : {
;;;357    						o_type = *p++;
;;;358    						printf("Option Type : %d (Redirected Header) \r\n",o_type);
;;;359    						o_len = (*p++)*8;
;;;360    						printf("Option length : %d \r\n",o_len);
;;;361    						p += (o_len-2);
;;;362    						break;
;;;363    					}
;;;364    					case RAO_MTU : {
;;;365    						o_type = *p++;
;;;366    						printf("Option Type : %d (MTU) \r\n",o_type);
;;;367    						o_len = (*p++)*8;
;;;368    						printf("Option length : %d \r\n",o_len);
;;;369    						p += (o_len-2);
;;;370    						break;
;;;371    					}
;;;372    					case RAO_RDNS : {
;;;373    						o_type = *p++;
;;;374    						printf("Option Type : %d (Recursive DNS Server) \r\n",o_type);
;;;375    						o_len = (*p++)*8;
;;;376    						printf("Option length : %d \r\n",o_len);
;;;377    						end_point = (uint32_t)p - 2 + o_len;
;;;378    						p++;p++;//reserved
;;;379    						dnstime = (*p++<<24);
;;;380    						dnstime += (*p++<<16);
;;;381    						dnstime += (*p++<<8);
;;;382    						dnstime += (*p++);
;;;383    						printf("DNS lifetime : %d \r\n", dnstime);
;;;384    						DNS6_Address[ 0] = *p++; DNS6_Address[ 1] = *p++; DNS6_Address[ 2] = *p++; DNS6_Address[ 3] = *p++;
;;;385    						DNS6_Address[ 4] = *p++; DNS6_Address[ 5] = *p++; DNS6_Address[ 6] = *p++; DNS6_Address[ 7] = *p++;
;;;386    						DNS6_Address[ 8] = *p++; DNS6_Address[ 9] = *p++; DNS6_Address[10] = *p++; DNS6_Address[11] = *p++;
;;;387    						DNS6_Address[12] = *p++; DNS6_Address[13] = *p++; DNS6_Address[14] = *p++; DNS6_Address[15] = *p++;
;;;388    						while((uint32_t)p != end_point)
;;;389    						{
;;;390    							p++;
;;;391    						}
;;;392    						printf("DNS IP : ");
;;;393    						for(i=0; i<15; i++){
;;;394    							printf("%.2x",DNS6_Address[i]);
;;;395    							if(1==(i%2))
;;;396    								printf(":");
;;;397    						}
;;;398    						printf("%.2x\r\n",DNS6_Address[15]);
;;;399    						break;
;;;400    					}
;;;401    					default : {
;;;402    						printf("default\r\n");
;;;403    						o_type = *p++;
;;;404    						printf("o_type : %d \r\n",o_type);
;;;405    						o_len = (*p++)*8;
;;;406    						printf("o_len : %d \r\n",o_len);
;;;407    						p += (o_len-2);
;;;408    						break;
;;;409    					}
;;;410    				}// ICMP option
;;;411    			}//while
;;;412    		}// ICMP RA message
;;;413    	}
;;;414    	
;;;415    	close(sn);
;;;416    	
;;;417    	//M_flag = RA_flag >> 7;
;;;418    	MO_flag = RA_flag >> 6;
;;;419    	
;;;420    	printf("MO : %x \r\n",MO_flag);
;;;421    		
;;;422    	result = MO_flag;
;;;423    	
;;;424    	for(i=0; i<buf_size; i++){ // buf initialize
;;;425    	
;;;426    		icmpbuf[i] = 0;
;;;427    	}
;;;428    	
;;;429    	return result;
;;;430    }
00050c  b01f              ADD      sp,sp,#0x7c
00050e  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1298|
000512  2104              MOVS     r1,#4                 ;223
000514  48fc              LDR      r0,|L1.2312|
000516  f7fffffe          BL       WIZCHIP_WRITE
00051a  49fc              LDR      r1,|L1.2316|
00051c  981c              LDR      r0,[sp,#0x70]         ;224
00051e  eb011040          ADD      r0,r1,r0,LSL #5       ;224
000522  213a              MOVS     r1,#0x3a              ;224
000524  f7fffffe          BL       WIZCHIP_WRITE
000528  2300              MOVS     r3,#0                 ;225
00052a  461a              MOV      r2,r3                 ;225
00052c  210b              MOVS     r1,#0xb               ;225
00052e  981c              LDR      r0,[sp,#0x70]         ;225
000530  f7fffffe          BL       socket
000534  49f6              LDR      r1,|L1.2320|
000536  981c              LDR      r0,[sp,#0x70]         ;228
000538  eb011040          ADD      r0,r1,r0,LSL #5       ;228
00053c  f7fffffe          BL       WIZCHIP_READ
000540  4601              MOV      r1,r0                 ;228
000542  a0f4              ADR      r0,|L1.2324|
000544  f7fffffe          BL       __2printf
000548  210f              MOVS     r1,#0xf               ;231
00054a  48f6              LDR      r0,|L1.2340|
00054c  f7fffffe          BL       WIZCHIP_WRITE
000550  21a0              MOVS     r1,#0xa0              ;231
000552  48f5              LDR      r0,|L1.2344|
000554  f7fffffe          BL       WIZCHIP_WRITE
000558  2100              MOVS     r1,#0                 ;232
00055a  48f4              LDR      r0,|L1.2348|
00055c  f7fffffe          BL       WIZCHIP_WRITE
000560  2102              MOVS     r1,#2                 ;234
000562  4620              MOV      r0,r4                 ;234
000564  f7fffffe          BL       WIZCHIP_WRITE
000568  a0f1              ADR      r0,|L1.2352|
00056a  f7fffffe          BL       __2printf
                  |L1.1390|
00056e  981c              LDR      r0,[sp,#0x70]         ;242
000570  f7fffffe          BL       getSn_RX_RSR
000574  2800              CMP      r0,#0                 ;242
000576  dd64              BLE      |L1.1602|
000578  a919              ADD      r1,sp,#0x64           ;245
00057a  a81a              ADD      r0,sp,#0x68           ;245
00057c  e9cd0100          STRD     r0,r1,[sp,#0]         ;245
000580  ab0d              ADD      r3,sp,#0x34           ;245
000582  fa0ff289          SXTH     r2,r9                 ;245
000586  4631              MOV      r1,r6                 ;245
000588  981c              LDR      r0,[sp,#0x70]         ;245
00058a  f7fffffe          BL       recvfrom
00058e  b285              UXTH     r5,r0                 ;245
000590  462a              MOV      r2,r5                 ;246
000592  f89d1064          LDRB     r1,[sp,#0x64]         ;246
000596  a0eb              ADR      r0,|L1.2372|
000598  f7fffffe          BL       __2printf
00059c  2400              MOVS     r4,#0                 ;247
00059e  e00f              B        |L1.1472|
                  |L1.1440|
0005a0  5d31              LDRB     r1,[r6,r4]            ;248
0005a2  a0f1              ADR      r0,|L1.2408|
0005a4  f7fffffe          BL       __2printf
0005a8  a0f1              ADR      r0,|L1.2416|
0005aa  f7fffffe          BL       __2printf
0005ae  0760              LSLS     r0,r4,#29             ;250
0005b0  f1b04f60          CMP      r0,#0xe0000000        ;250
0005b4  d103              BNE      |L1.1470|
0005b6  f2af1080          ADR      r0,|L1.1080|
0005ba  f7fffffe          BL       __2printf
                  |L1.1470|
0005be  1c64              ADDS     r4,r4,#1              ;251
                  |L1.1472|
0005c0  42ac              CMP      r4,r5                 ;247
0005c2  dbed              BLT      |L1.1440|
0005c4  f2af1090          ADR      r0,|L1.1080|
0005c8  f7fffffe          BL       __2printf
0005cc  f89d0040          LDRB     r0,[sp,#0x40]         ;254
0005d0  ac09              ADD      r4,sp,#0x24           ;254
0005d2  f89d3043          LDRB     r3,[sp,#0x43]         ;254
0005d6  f89d2042          LDRB     r2,[sp,#0x42]         ;254
0005da  f89d1041          LDRB     r1,[sp,#0x41]         ;254
0005de  e884000f          STM      r4,{r0-r3}            ;254
0005e2  f89d003c          LDRB     r0,[sp,#0x3c]         ;254
0005e6  ac05              ADD      r4,sp,#0x14           ;254
0005e8  f89d303f          LDRB     r3,[sp,#0x3f]         ;254
0005ec  f89d203e          LDRB     r2,[sp,#0x3e]         ;254
0005f0  f89d103d          LDRB     r1,[sp,#0x3d]         ;254
0005f4  e884000f          STM      r4,{r0-r3}            ;254
0005f8  f89d0038          LDRB     r0,[sp,#0x38]         ;254
0005fc  ac01              ADD      r4,sp,#4              ;254
0005fe  f89d303b          LDRB     r3,[sp,#0x3b]         ;254
000602  f89d203a          LDRB     r2,[sp,#0x3a]         ;254
000606  f89d1039          LDRB     r1,[sp,#0x39]         ;254
00060a  e884000f          STM      r4,{r0-r3}            ;254
00060e  f89d0037          LDRB     r0,[sp,#0x37]         ;254
000612  9000              STR      r0,[sp,#0]            ;254
000614  f89d3036          LDRB     r3,[sp,#0x36]         ;254
000618  f89d2035          LDRB     r2,[sp,#0x35]         ;254
00061c  f89d1034          LDRB     r1,[sp,#0x34]         ;254
000620  a0d4              ADR      r0,|L1.2420|
000622  f7fffffe          BL       __2printf
000626  4ce2              LDR      r4,|L1.2480|
000628  213a              MOVS     r1,#0x3a              ;257
00062a  4620              MOV      r0,r4                 ;257
00062c  f7fffffe          BL       WIZCHIP_WRITE
000630  2210              MOVS     r2,#0x10              ;258
000632  a90d              ADD      r1,sp,#0x34           ;258
000634  48df              LDR      r0,|L1.2484|
000636  f7fffffe          BL       WIZCHIP_WRITE_BUF
00063a  21c5              MOVS     r1,#0xc5              ;259
00063c  4620              MOV      r0,r4                 ;259
00063e  f7fffffe          BL       WIZCHIP_WRITE
                  |L1.1602|
000642  7830              LDRB     r0,[r6,#0]            ;263
000644  4634              MOV      r4,r6                 ;262
000646  2886              CMP      r0,#0x86              ;263
000648  d191              BNE      |L1.1390|
00064a  eb040b05          ADD      r11,r4,r5             ;264
00064e  a0da              ADR      r0,|L1.2488|
000650  f7fffffe          BL       __2printf
000654  7821              LDRB     r1,[r4,#0]            ;268
000656  a0da              ADR      r0,|L1.2496|
000658  f7fffffe          BL       __2printf
00065c  7861              LDRB     r1,[r4,#1]            ;270
00065e  a0dc              ADR      r0,|L1.2512|
000660  f7fffffe          BL       __2printf
000664  7960              LDRB     r0,[r4,#5]            ;274
000666  9000              STR      r0,[sp,#0]            ;275
000668  4601              MOV      r1,r0                 ;275
00066a  a0dd              ADR      r0,|L1.2528|
00066c  f7fffffe          BL       __2printf
000670  79a0              LDRB     r0,[r4,#6]            ;276
000672  79e1              LDRB     r1,[r4,#7]            ;277
000674  eb012000          ADD      r0,r1,r0,LSL #8       ;277
000678  b281              UXTH     r1,r0                 ;277
00067a  a0dd              ADR      r0,|L1.2544|
00067c  f7fffffe          BL       __2printf
000680  7a20              LDRB     r0,[r4,#8]            ;279
000682  7a61              LDRB     r1,[r4,#9]            ;280
000684  0600              LSLS     r0,r0,#24             ;279
000686  eb004001          ADD      r0,r0,r1,LSL #16      ;280
00068a  7aa1              LDRB     r1,[r4,#0xa]          ;281
00068c  eb002001          ADD      r0,r0,r1,LSL #8       ;281
000690  7ae1              LDRB     r1,[r4,#0xb]          ;282
000692  4401              ADD      r1,r1,r0              ;282
000694  a0dd              ADR      r0,|L1.2572|
000696  f7fffffe          BL       __2printf
00069a  7b20              LDRB     r0,[r4,#0xc]          ;284
00069c  7b61              LDRB     r1,[r4,#0xd]          ;285
00069e  0600              LSLS     r0,r0,#24             ;284
0006a0  eb004001          ADD      r0,r0,r1,LSL #16      ;285
0006a4  7ba1              LDRB     r1,[r4,#0xe]          ;286
0006a6  eb002001          ADD      r0,r0,r1,LSL #8       ;286
0006aa  7be1              LDRB     r1,[r4,#0xf]          ;287
0006ac  3410              ADDS     r4,r4,#0x10           ;288
0006ae  4401              ADD      r1,r1,r0              ;287
0006b0  a0dd              ADR      r0,|L1.2600|
0006b2  e104              B        |L1.2238|
                  |L1.1716|
0006b4  7821              LDRB     r1,[r4,#0]            ;291
0006b6  2904              CMP      r1,#4                 ;291
0006b8  d07e              BEQ      |L1.1976|
0006ba  dc06              BGT      |L1.1738|
0006bc  2901              CMP      r1,#1                 ;291
0006be  d015              BEQ      |L1.1772|
0006c0  2902              CMP      r1,#2                 ;291
0006c2  d015              BEQ      |L1.1776|
0006c4  2903              CMP      r1,#3                 ;291
0006c6  d104              BNE      |L1.1746|
0006c8  e020              B        |L1.1804|
                  |L1.1738|
0006ca  2905              CMP      r1,#5                 ;291
0006cc  d075              BEQ      |L1.1978|
0006ce  2919              CMP      r1,#0x19              ;291
0006d0  d074              BEQ      |L1.1980|
                  |L1.1746|
0006d2  a0db              ADR      r0,|L1.2624|
0006d4  f7fffffe          BL       __2printf
0006d8  7821              LDRB     r1,[r4,#0]            ;403
0006da  a0dc              ADR      r0,|L1.2636|
0006dc  f7fffffe          BL       __2printf
0006e0  7860              LDRB     r0,[r4,#1]            ;405
0006e2  06c0              LSLS     r0,r0,#27             ;405
0006e4  0e05              LSRS     r5,r0,#24             ;405
0006e6  4629              MOV      r1,r5                 ;406
0006e8  a0dc              ADR      r0,|L1.2652|
0006ea  e009              B        |L1.1792|
                  |L1.1772|
0006ec  a0df              ADR      r0,|L1.2668|
0006ee  e000              B        |L1.1778|
                  |L1.1776|
0006f0  a0e7              ADR      r0,|L1.2704|
                  |L1.1778|
0006f2  f7fffffe          BL       __2printf
0006f6  7860              LDRB     r0,[r4,#1]            ;295
0006f8  06c0              LSLS     r0,r0,#27             ;295
0006fa  0e05              LSRS     r5,r0,#24             ;295
0006fc  4629              MOV      r1,r5                 ;296
0006fe  a0ed              ADR      r0,|L1.2740|
                  |L1.1792|
000700  1ca4              ADDS     r4,r4,#2              ;296
000702  f7fffffe          BL       __2printf
000706  442c              ADD      r4,r4,r5              ;407
000708  1ea4              SUBS     r4,r4,#2              ;407
00070a  e0da              B        |L1.2242|
                  |L1.1804|
00070c  a0ef              ADR      r0,|L1.2764|
00070e  f7fffffe          BL       __2printf
000712  7860              LDRB     r0,[r4,#1]            ;311
000714  1ca4              ADDS     r4,r4,#2              ;312
000716  06c0              LSLS     r0,r0,#27             ;311
000718  0e05              LSRS     r5,r0,#24             ;311
00071a  4629              MOV      r1,r5                 ;312
00071c  a0e5              ADR      r0,|L1.2740|
00071e  f7fffffe          BL       __2printf
000722  1967              ADDS     r7,r4,r5              ;313
000724  7825              LDRB     r5,[r4,#0]            ;314
000726  a0f4              ADR      r0,|L1.2808|
000728  4629              MOV      r1,r5                 ;315
00072a  1ebf              SUBS     r7,r7,#2              ;315
00072c  f7fffffe          BL       __2printf
000730  7861              LDRB     r1,[r4,#1]            ;316
000732  a0f7              ADR      r0,|L1.2832|
000734  f7fffffe          BL       __2printf
000738  78a0              LDRB     r0,[r4,#2]            ;318
00073a  78e1              LDRB     r1,[r4,#3]            ;319
00073c  0600              LSLS     r0,r0,#24             ;318
00073e  eb004001          ADD      r0,r0,r1,LSL #16      ;319
000742  7921              LDRB     r1,[r4,#4]            ;320
000744  eb002001          ADD      r0,r0,r1,LSL #8       ;320
000748  7961              LDRB     r1,[r4,#5]            ;321
00074a  4401              ADD      r1,r1,r0              ;321
00074c  a0f9              ADR      r0,|L1.2868|
00074e  f7fffffe          BL       __2printf
000752  79a0              LDRB     r0,[r4,#6]            ;323
000754  79e1              LDRB     r1,[r4,#7]            ;324
000756  0600              LSLS     r0,r0,#24             ;323
000758  eb004001          ADD      r0,r0,r1,LSL #16      ;324
00075c  7a21              LDRB     r1,[r4,#8]            ;325
00075e  eb002001          ADD      r0,r0,r1,LSL #8       ;325
000762  7a61              LDRB     r1,[r4,#9]            ;326
000764  340a              ADDS     r4,r4,#0xa            ;327
000766  4401              ADD      r1,r1,r0              ;326
000768  a0f8              ADR      r0,|L1.2892|
00076a  f7fffffe          BL       __2printf
00076e  2210              MOVS     r2,#0x10              ;329
000770  a915              ADD      r1,sp,#0x54           ;329
000772  48fd              LDR      r0,|L1.2920|
000774  1d24              ADDS     r4,r4,#4              ;329
000776  f7fffffe          BL       WIZCHIP_READ_BUF
00077a  2000              MOVS     r0,#0                 ;331
00077c  a911              ADD      r1,sp,#0x44           ;206
00077e  22ff              MOVS     r2,#0xff              ;336
000780  f10d0854          ADD      r8,sp,#0x54           ;205
000784  e007              B        |L1.1942|
                  |L1.1926|
000786  f814cb01          LDRB     r12,[r4],#1           ;333
00078a  f808c000          STRB     r12,[r8,r0]           ;333
00078e  076b              LSLS     r3,r5,#29             ;334
000790  d100              BNE      |L1.1940|
000792  540a              STRB     r2,[r1,r0]            ;336
                  |L1.1940|
000794  1c40              ADDS     r0,r0,#1              ;336
                  |L1.1942|
000796  ebb00fd5          CMP      r0,r5,LSR #3          ;331
00079a  dbf4              BLT      |L1.1926|
00079c  f8dfa210          LDR      r10,|L1.2480|
0007a0  213a              MOVS     r1,#0x3a              ;339
0007a2  4650              MOV      r0,r10                ;339
0007a4  f7fffffe          BL       WIZCHIP_WRITE
0007a8  2210              MOVS     r2,#0x10              ;340
0007aa  a915              ADD      r1,sp,#0x54           ;340
0007ac  48ef              LDR      r0,|L1.2924|
0007ae  f7fffffe          BL       WIZCHIP_WRITE_BUF
0007b2  2210              MOVS     r2,#0x10              ;341
0007b4  a911              ADD      r1,sp,#0x44           ;341
0007b6  e002              B        |L1.1982|
                  |L1.1976|
0007b8  e027              B        |L1.2058|
                  |L1.1978|
0007ba  e028              B        |L1.2062|
                  |L1.1980|
0007bc  e029              B        |L1.2066|
                  |L1.1982|
0007be  48ec              LDR      r0,|L1.2928|
0007c0  f7fffffe          BL       WIZCHIP_WRITE_BUF
0007c4  21c5              MOVS     r1,#0xc5              ;342
0007c6  4650              MOV      r0,r10                ;342
0007c8  f7fffffe          BL       WIZCHIP_WRITE
0007cc  e000              B        |L1.2000|
                  |L1.1998|
0007ce  1c64              ADDS     r4,r4,#1              ;343
                  |L1.2000|
0007d0  42bc              CMP      r4,r7                 ;343
0007d2  d1fc              BNE      |L1.1998|
0007d4  a0e7              ADR      r0,|L1.2932|
0007d6  f7fffffe          BL       __2printf
0007da  2700              MOVS     r7,#0                 ;348
0007dc  f8dfa3a0          LDR      r10,|L1.2944|
0007e0  e00c              B        |L1.2044|
                  |L1.2018|
0007e2  f8181007          LDRB     r1,[r8,r7]            ;349
0007e6  a060              ADR      r0,|L1.2408|
0007e8  f7fffffe          BL       __2printf
0007ec  ea07000a          AND      r0,r7,r10             ;350
0007f0  2801              CMP      r0,#1                 ;350
0007f2  d102              BNE      |L1.2042|
0007f4  a0e3              ADR      r0,|L1.2948|
0007f6  f7fffffe          BL       __2printf
                  |L1.2042|
0007fa  1c7f              ADDS     r7,r7,#1              ;351
                  |L1.2044|
0007fc  ebb70fd5          CMP      r7,r5,LSR #3          ;348
000800  dbef              BLT      |L1.2018|
000802  a0e1              ADR      r0,|L1.2952|
000804  f7fffffe          BL       __2printf
000808  e05b              B        |L1.2242|
                  |L1.2058|
00080a  a0e0              ADR      r0,|L1.2956|
00080c  e771              B        |L1.1778|
                  |L1.2062|
00080e  a0e9              ADR      r0,|L1.2996|
000810  e76f              B        |L1.1778|
                  |L1.2066|
000812  a0ef              ADR      r0,|L1.3024|
000814  f7fffffe          BL       __2printf
000818  7860              LDRB     r0,[r4,#1]            ;375
00081a  1ca4              ADDS     r4,r4,#2              ;376
00081c  06c0              LSLS     r0,r0,#27             ;375
00081e  0e05              LSRS     r5,r0,#24             ;375
000820  4629              MOV      r1,r5                 ;376
000822  a0a4              ADR      r0,|L1.2740|
000824  f7fffffe          BL       __2printf
000828  78a0              LDRB     r0,[r4,#2]            ;379
00082a  78e1              LDRB     r1,[r4,#3]            ;380
00082c  0600              LSLS     r0,r0,#24             ;379
00082e  eb004001          ADD      r0,r0,r1,LSL #16      ;380
000832  7921              LDRB     r1,[r4,#4]            ;381
000834  4425              ADD      r5,r5,r4              ;377
000836  eb002001          ADD      r0,r0,r1,LSL #8       ;381
00083a  7961              LDRB     r1,[r4,#5]            ;382
00083c  1ead              SUBS     r5,r5,#2              ;383
00083e  4401              ADD      r1,r1,r0              ;382
000840  a0ee              ADR      r0,|L1.3068|
000842  f7fffffe          BL       __2printf
000846  4ff3              LDR      r7,|L1.3092|
000848  79a0              LDRB     r0,[r4,#6]            ;384
00084a  7038              STRB     r0,[r7,#0]            ;384
00084c  79e0              LDRB     r0,[r4,#7]            ;384
00084e  7078              STRB     r0,[r7,#1]            ;384
000850  7a20              LDRB     r0,[r4,#8]            ;384
000852  70b8              STRB     r0,[r7,#2]            ;384
000854  7a60              LDRB     r0,[r4,#9]            ;384
000856  70f8              STRB     r0,[r7,#3]            ;384
000858  7aa0              LDRB     r0,[r4,#0xa]          ;385
00085a  7138              STRB     r0,[r7,#4]            ;385
00085c  7ae0              LDRB     r0,[r4,#0xb]          ;385
00085e  7178              STRB     r0,[r7,#5]            ;385
000860  7b20              LDRB     r0,[r4,#0xc]          ;385
000862  71b8              STRB     r0,[r7,#6]            ;385
000864  7b60              LDRB     r0,[r4,#0xd]          ;385
000866  71f8              STRB     r0,[r7,#7]            ;385
000868  7ba0              LDRB     r0,[r4,#0xe]          ;386
00086a  7238              STRB     r0,[r7,#8]            ;386
00086c  7be0              LDRB     r0,[r4,#0xf]          ;386
00086e  7278              STRB     r0,[r7,#9]            ;386
000870  7c20              LDRB     r0,[r4,#0x10]         ;386
000872  72b8              STRB     r0,[r7,#0xa]          ;386
000874  7c60              LDRB     r0,[r4,#0x11]         ;386
000876  72f8              STRB     r0,[r7,#0xb]          ;386
000878  7ca0              LDRB     r0,[r4,#0x12]         ;387
00087a  7338              STRB     r0,[r7,#0xc]          ;387
00087c  7ce0              LDRB     r0,[r4,#0x13]         ;387
00087e  7378              STRB     r0,[r7,#0xd]          ;387
000880  7d20              LDRB     r0,[r4,#0x14]         ;387
000882  73b8              STRB     r0,[r7,#0xe]          ;387
000884  7d60              LDRB     r0,[r4,#0x15]         ;387
000886  73f8              STRB     r0,[r7,#0xf]          ;387
000888  3416              ADDS     r4,r4,#0x16           ;387
00088a  e000              B        |L1.2190|
                  |L1.2188|
00088c  1c64              ADDS     r4,r4,#1              ;388
                  |L1.2190|
00088e  42ac              CMP      r4,r5                 ;388
000890  d1fc              BNE      |L1.2188|
000892  a0e1              ADR      r0,|L1.3096|
000894  f7fffffe          BL       __2printf
000898  f8df82e4          LDR      r8,|L1.2944|
00089c  2500              MOVS     r5,#0                 ;393
                  |L1.2206|
00089e  a032              ADR      r0,|L1.2408|
0008a0  5d79              LDRB     r1,[r7,r5]            ;394
0008a2  f7fffffe          BL       __2printf
0008a6  ea050008          AND      r0,r5,r8              ;395
0008aa  2801              CMP      r0,#1                 ;395
0008ac  d102              BNE      |L1.2228|
0008ae  a0b5              ADR      r0,|L1.2948|
0008b0  f7fffffe          BL       __2printf
                  |L1.2228|
0008b4  1c6d              ADDS     r5,r5,#1              ;396
0008b6  2d0f              CMP      r5,#0xf               ;393
0008b8  dbf1              BLT      |L1.2206|
0008ba  7bf9              LDRB     r1,[r7,#0xf]          ;398  ; DNS6_Address
0008bc  a0d9              ADR      r0,|L1.3108|
                  |L1.2238|
0008be  f7fffffe          BL       __2printf
                  |L1.2242|
0008c2  455c              CMP      r4,r11                ;290
0008c4  f4ffaef6          BCC      |L1.1716|
0008c8  981c              LDR      r0,[sp,#0x70]         ;415
0008ca  f7fffffe          BL       close
0008ce  9800              LDR      r0,[sp,#0]            ;418
0008d0  0984              LSRS     r4,r0,#6              ;418
0008d2  4621              MOV      r1,r4                 ;420
0008d4  e1aa              B        |L1.3116|
0008d6  0000              DCW      0x0000
                  |L1.2264|
                          DCD      ||.conststring||+0x180
                  |L1.2268|
                          DCD      ||.conststring||+0x1c8
                  |L1.2272|
                          DCD      ||.conststring||+0x20c
                  |L1.2276|
                          DCD      0x60213000
                  |L1.2280|
0008e8  4552524f          DCB      "ERROR : RQCMD is not clear\r\n",0
0008ec  52203a20
0008f0  5251434d
0008f4  44206973
0008f8  206e6f74
0008fc  20636c65
000900  61720d0a
000904  00      
000905  00                DCB      0
000906  00                DCB      0
000907  00                DCB      0
                  |L1.2312|
                          DCD      0x6041f000
                  |L1.2316|
                          DCD      0x60010008
                  |L1.2320|
                          DCD      0x60003008
                  |L1.2324|
000914  536e5f53          DCB      "Sn_SR : %x \r\n",0
000918  52203a20
00091c  2578200d
000920  0a00    
000922  00                DCB      0
000923  00                DCB      0
                  |L1.2340|
                          DCD      0x60420800
                  |L1.2344|
                          DCD      0x60420900
                  |L1.2348|
                          DCD      0x60420c00
                  |L1.2352|
000930  57616974          DCB      "Wait SLIR.....\r\n",0
000934  20534c49
000938  522e2e2e
00093c  2e2e0d0a
000940  00      
000941  00                DCB      0
000942  00                DCB      0
000943  00                DCB      0
                  |L1.2372|
000944  61667465          DCB      "after addr_len : %x, size : %x \r\n",0
000948  72206164
00094c  64725f6c
000950  656e203a
000954  2025782c
000958  2073697a
00095c  65203a20
000960  2578200d
000964  0a00    
000966  00                DCB      0
000967  00                DCB      0
                  |L1.2408|
000968  252e3278          DCB      "%.2x",0
00096c  00      
00096d  00                DCB      0
00096e  00                DCB      0
00096f  00                DCB      0
                  |L1.2416|
000970  2000              DCB      " ",0
000972  00                DCB      0
000973  00                DCB      0
                  |L1.2420|
000974  72656376          DCB      "recvfrom IP : %x%x:%x%x:%x%x:%x%x:%x%x:%x%x:%x%x:%x%x \r"
000978  66726f6d
00097c  20495020
000980  3a202578
000984  25783a25
000988  7825783a
00098c  25782578
000990  3a257825
000994  783a2578
000998  25783a25
00099c  7825783a
0009a0  25782578
0009a4  3a257825
0009a8  78200d  
0009ab  0a00              DCB      "\n",0
0009ad  00                DCB      0
0009ae  00                DCB      0
0009af  00                DCB      0
                  |L1.2480|
                          DCD      0x6041f500
                  |L1.2484|
                          DCD      0x60417000
                  |L1.2488|
0009b8  52410d0a          DCB      "RA\r\n",0
0009bc  00      
0009bd  00                DCB      0
0009be  00                DCB      0
0009bf  00                DCB      0
                  |L1.2496|
0009c0  74797065          DCB      "type : %x \r\n",0
0009c4  203a2025
0009c8  78200d0a
0009cc  00      
0009cd  00                DCB      0
0009ce  00                DCB      0
0009cf  00                DCB      0
                  |L1.2512|
0009d0  636f6465          DCB      "code : %x \r\n",0
0009d4  203a2025
0009d8  78200d0a
0009dc  00      
0009dd  00                DCB      0
0009de  00                DCB      0
0009df  00                DCB      0
                  |L1.2528|
0009e0  52415f66          DCB      "RA_flag : %x \r\n",0
0009e4  6c616720
0009e8  3a202578
0009ec  200d0a00
                  |L1.2544|
0009f0  526f7574          DCB      "Router_lifetime : %d s \r\n",0
0009f4  65725f6c
0009f8  69666574
0009fc  696d6520
000a00  3a202564
000a04  2073200d
000a08  0a00    
000a0a  00                DCB      0
000a0b  00                DCB      0
                  |L1.2572|
000a0c  52656163          DCB      "Reachable_time : %d ms \r\n",0
000a10  6861626c
000a14  655f7469
000a18  6d65203a
000a1c  20256420
000a20  6d73200d
000a24  0a00    
000a26  00                DCB      0
000a27  00                DCB      0
                  |L1.2600|
000a28  52657472          DCB      "Retrans_time : %d ms \r\n",0
000a2c  616e735f
000a30  74696d65
000a34  203a2025
000a38  64206d73
000a3c  200d0a00
                  |L1.2624|
000a40  64656661          DCB      "default\r\n",0
000a44  756c740d
000a48  0a00    
000a4a  00                DCB      0
000a4b  00                DCB      0
                  |L1.2636|
000a4c  6f5f7479          DCB      "o_type : %d \r\n",0
000a50  7065203a
000a54  20256420
000a58  0d0a00  
000a5b  00                DCB      0
                  |L1.2652|
000a5c  6f5f6c65          DCB      "o_len : %d \r\n",0
000a60  6e203a20
000a64  2564200d
000a68  0a00    
000a6a  00                DCB      0
000a6b  00                DCB      0
                  |L1.2668|
000a6c  4f707469          DCB      "Option Type : %d (Source LLA) \r\n",0
000a70  6f6e2054
000a74  79706520
000a78  3a202564
000a7c  2028536f
000a80  75726365
000a84  204c4c41
000a88  29200d0a
000a8c  00      
000a8d  00                DCB      0
000a8e  00                DCB      0
000a8f  00                DCB      0
                  |L1.2704|
000a90  4f707469          DCB      "Option Type : %d (Target LLA) \r\n",0
000a94  6f6e2054
000a98  79706520
000a9c  3a202564
000aa0  20285461
000aa4  72676574
000aa8  204c4c41
000aac  29200d0a
000ab0  00      
000ab1  00                DCB      0
000ab2  00                DCB      0
000ab3  00                DCB      0
                  |L1.2740|
000ab4  4f707469          DCB      "Option length : %d \r\n",0
000ab8  6f6e206c
000abc  656e6774
000ac0  68203a20
000ac4  2564200d
000ac8  0a00    
000aca  00                DCB      0
000acb  00                DCB      0
                  |L1.2764|
000acc  4f707469          DCB      "Option Type : %d (Prefix information) \r\n",0
000ad0  6f6e2054
000ad4  79706520
000ad8  3a202564
000adc  20285072
000ae0  65666978
000ae4  20696e66
000ae8  6f726d61
000aec  74696f6e
000af0  29200d0a
000af4  00      
000af5  00                DCB      0
000af6  00                DCB      0
000af7  00                DCB      0
                  |L1.2808|
000af8  50726566          DCB      "Prefix Length : %d \r\n",0
000afc  6978204c
000b00  656e6774
000b04  68203a20
000b08  2564200d
000b0c  0a00    
000b0e  00                DCB      0
000b0f  00                DCB      0
                  |L1.2832|
000b10  50726566          DCB      "Prefix Information Flag : %.2x \r\n",0
000b14  69782049
000b18  6e666f72
000b1c  6d617469
000b20  6f6e2046
000b24  6c616720
000b28  3a20252e
000b2c  3278200d
000b30  0a00    
000b32  00                DCB      0
000b33  00                DCB      0
                  |L1.2868|
000b34  76616c69          DCB      "valid lifetime : %d \r\n",0
000b38  64206c69
000b3c  66657469
000b40  6d65203a
000b44  20256420
000b48  0d0a00  
000b4b  00                DCB      0
                  |L1.2892|
000b4c  70726566          DCB      "preferred lifetime : %d \r\n",0
000b50  65727265
000b54  64206c69
000b58  66657469
000b5c  6d65203a
000b60  20256420
000b64  0d0a00  
000b67  00                DCB      0
                  |L1.2920|
                          DCD      0x60414000
                  |L1.2924|
                          DCD      0x60415000
                  |L1.2928|
                          DCD      0x60416000
                  |L1.2932|
000b74  70726566          DCB      "prefix : ",0
000b78  6978203a
000b7c  2000    
000b7e  00                DCB      0
000b7f  00                DCB      0
                  |L1.2944|
                          DCD      0x80000001
                  |L1.2948|
000b84  3a00              DCB      ":",0
000b86  00                DCB      0
000b87  00                DCB      0
                  |L1.2952|
000b88  3a0d0a00          DCB      ":\r\n",0
                  |L1.2956|
000b8c  4f707469          DCB      "Option Type : %d (Redirected Header) \r\n",0
000b90  6f6e2054
000b94  79706520
000b98  3a202564
000b9c  20285265
000ba0  64697265
000ba4  63746564
000ba8  20486561
000bac  64657229
000bb0  200d0a00
                  |L1.2996|
000bb4  4f707469          DCB      "Option Type : %d (MTU) \r\n",0
000bb8  6f6e2054
000bbc  79706520
000bc0  3a202564
000bc4  20284d54
000bc8  5529200d
000bcc  0a00    
000bce  00                DCB      0
000bcf  00                DCB      0
                  |L1.3024|
000bd0  4f707469          DCB      "Option Type : %d (Recursive DNS Server) \r\n",0
000bd4  6f6e2054
000bd8  79706520
000bdc  3a202564
000be0  20285265
000be4  63757273
000be8  69766520
000bec  444e5320
000bf0  53657276
000bf4  65722920
000bf8  0d0a00  
000bfb  00                DCB      0
                  |L1.3068|
000bfc  444e5320          DCB      "DNS lifetime : %d \r\n",0
000c00  6c696665
000c04  74696d65
000c08  203a2025
000c0c  64200d0a
000c10  00      
000c11  00                DCB      0
000c12  00                DCB      0
000c13  00                DCB      0
                  |L1.3092|
                          DCD      DNS6_Address
                  |L1.3096|
000c18  444e5320          DCB      "DNS IP : ",0
000c1c  4950203a
000c20  2000    
000c22  00                DCB      0
000c23  00                DCB      0
                  |L1.3108|
000c24  252e3278          DCB      "%.2x\r\n",0
000c28  0d0a00  
000c2b  00                DCB      0
                  |L1.3116|
000c2c  a05c              ADR      r0,|L1.3488|
000c2e  f7fffffe          BL       __2printf
000c32  2100              MOVS     r1,#0                 ;424
000c34  4620              MOV      r0,r4                 ;422
000c36  460a              MOV      r2,r1                 ;424
000c38  e001              B        |L1.3134|
                  |L1.3130|
000c3a  5472              STRB     r2,[r6,r1]            ;426
000c3c  1c49              ADDS     r1,r1,#1              ;426
                  |L1.3134|
000c3e  4549              CMP      r1,r9                 ;424
000c40  dbfb              BLT      |L1.3130|
000c42  e463              B        |L1.1292|
;;;431    
                          ENDP

                  Generate_EUI64 PROC
;;;507    
;;;508    void Generate_EUI64(uint8_t *mac_addr, uint8_t *Link_Local_Addr)
000c44  23fe              MOVS     r3,#0xfe
;;;509    {
;;;510    	*Link_Local_Addr = 0xfe;
000c46  700b              STRB     r3,[r1,#0]
;;;511    	*(Link_Local_Addr+ 1) = 0x80;
000c48  2280              MOVS     r2,#0x80
000c4a  704a              STRB     r2,[r1,#1]
;;;512    	//00:00:00:00:00:00
;;;513    	*(Link_Local_Addr+ 8) = *(mac_addr); //flip the 7th bit of 1st byte
000c4c  7802              LDRB     r2,[r0,#0]
;;;514    	*(Link_Local_Addr+ 8) ^= 1 << 1;
000c4e  f0820202          EOR      r2,r2,#2
000c52  720a              STRB     r2,[r1,#8]
;;;515    	*(Link_Local_Addr+ 9) = *(mac_addr+1);
000c54  7842              LDRB     r2,[r0,#1]
000c56  724a              STRB     r2,[r1,#9]
;;;516    	*(Link_Local_Addr+10) = *(mac_addr+2);
000c58  7882              LDRB     r2,[r0,#2]
000c5a  728a              STRB     r2,[r1,#0xa]
;;;517    	*(Link_Local_Addr+11) = 0xFF;
000c5c  22ff              MOVS     r2,#0xff
000c5e  72ca              STRB     r2,[r1,#0xb]
;;;518    	*(Link_Local_Addr+12) = 0xFE;
000c60  730b              STRB     r3,[r1,#0xc]
;;;519    	*(Link_Local_Addr+13) = *(mac_addr+3);
000c62  78c2              LDRB     r2,[r0,#3]
000c64  734a              STRB     r2,[r1,#0xd]
;;;520    	*(Link_Local_Addr+14) = *(mac_addr+4);
000c66  7902              LDRB     r2,[r0,#4]
000c68  738a              STRB     r2,[r1,#0xe]
;;;521    	*(Link_Local_Addr+15) = *(mac_addr+5);
000c6a  7940              LDRB     r0,[r0,#5]
000c6c  73c8              STRB     r0,[r1,#0xf]
;;;522    }
000c6e  4770              BX       lr
                          ENDP

                  Duplicate_Address_Detection PROC
;;;431    
;;;432    uint8_t Duplicate_Address_Detection(uint8_t *mac_addr)
000c70  b5f0              PUSH     {r4-r7,lr}
;;;433    {
000c72  b095              SUB      sp,sp,#0x54
;;;434    	uint8_t result;
;;;435    	
;;;436    	uint8_t WIZ_LLA[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
000c74  2100              MOVS     r1,#0
000c76  4604              MOV      r4,r0                 ;433
000c78  9111              STR      r1,[sp,#0x44]
000c7a  9112              STR      r1,[sp,#0x48]
000c7c  9113              STR      r1,[sp,#0x4c]
;;;437    	
;;;438        uint8_t flags;
;;;439    	uint8_t tmp_array[16];
;;;440    
;;;441    	#if (AutoConfig_debug == debug_on)
;;;442    	printf("\n\n\n=================================================\r\n");
000c7e  a04b              ADR      r0,|L1.3500|
000c80  9114              STR      r1,[sp,#0x50]
000c82  f7fffffe          BL       __2printf
;;;443        printf("==================== DAD_NS_Send ================\r\n");
000c86  a057              ADR      r0,|L1.3556|
000c88  f7fffffe          BL       __2printf
;;;444        printf("=================================================\r\n");
000c8c  a062              ADR      r0,|L1.3608|
000c8e  f7fffffe          BL       __2printf
;;;445    	#endif
;;;446    	
;;;447        setSLRTR(2000);
000c92  2107              MOVS     r1,#7
000c94  486d              LDR      r0,|L1.3660|
000c96  f7fffffe          BL       WIZCHIP_WRITE
000c9a  21d0              MOVS     r1,#0xd0
000c9c  486c              LDR      r0,|L1.3664|
000c9e  f7fffffe          BL       WIZCHIP_WRITE
;;;448        setSLRCR(5);
000ca2  2105              MOVS     r1,#5
000ca4  486b              LDR      r0,|L1.3668|
000ca6  f7fffffe          BL       WIZCHIP_WRITE
;;;449    	
;;;450    	Generate_EUI64(mac_addr, WIZ_LLA);
000caa  a911              ADD      r1,sp,#0x44
000cac  4620              MOV      r0,r4
000cae  f7fffffe          BL       Generate_EUI64
;;;451    	
;;;452    	setSLDIP6R(WIZ_LLA);//target address setting
000cb2  2210              MOVS     r2,#0x10
000cb4  a911              ADD      r1,sp,#0x44
000cb6  4868              LDR      r0,|L1.3672|
000cb8  f7fffffe          BL       WIZCHIP_WRITE_BUF
;;;453    	
;;;454    	//setSLIMR(SLIR_TIOUT|SLIR_NS); //only external interrupt???
;;;455    	
;;;456    	if(getSLCR() != 0x00) //check clear CMD
000cbc  4c67              LDR      r4,|L1.3676|
000cbe  4620              MOV      r0,r4
000cc0  f7fffffe          BL       WIZCHIP_READ
000cc4  b138              CBZ      r0,|L1.3286|
;;;457        {
;;;458    		#if (AutoConfig_debug == debug_on)
;;;459            printf("ERROR : RQCMD is not clear %x \r\n",getSLCR());
000cc6  4620              MOV      r0,r4
000cc8  f7fffffe          BL       WIZCHIP_READ
000ccc  4601              MOV      r1,r0
000cce  a064              ADR      r0,|L1.3680|
000cd0  f7fffffe          BL       __2printf
                  |L1.3284|
;;;460    		#endif
;;;461            while(1);
000cd4  e7fe              B        |L1.3284|
                  |L1.3286|
;;;462        }
;;;463    	
;;;464    	setSLCR(SLCR_NS);	
000cd6  2104              MOVS     r1,#4
000cd8  4620              MOV      r0,r4
000cda  f7fffffe          BL       WIZCHIP_WRITE
;;;465    
;;;466    	#if (AutoConfig_debug == debug_on)
;;;467        printf("Wait RQIR.....\r\n");
000cde  a069              ADR      r0,|L1.3716|
000ce0  f7fffffe          BL       __2printf
;;;468    	#endif
;;;469    
;;;470        do
;;;471    	{
;;;472    		flags = getSLIR();
000ce4  4e6c              LDR      r6,|L1.3736|
                  |L1.3302|
000ce6  4630              MOV      r0,r6
000ce8  f7fffffe          BL       WIZCHIP_READ
000cec  4604              MOV      r4,r0
;;;473    				
;;;474    		if(flags&SLIR_TOUT)
000cee  0600              LSLS     r0,r0,#24
000cf0  d545              BPL      |L1.3454|
;;;475    		{
;;;476    			#if (AutoConfig_debug == debug_on)
;;;477    			printf("\nTimeout !!! DAD SUCCESSED\r\n");
000cf2  a06a              ADR      r0,|L1.3740|
000cf4  f7fffffe          BL       __2printf
;;;478    			#endif
;;;479    			NETUNLOCK();
000cf8  4d70              LDR      r5,|L1.3772|
000cfa  213a              MOVS     r1,#0x3a
000cfc  4628              MOV      r0,r5
000cfe  f7fffffe          BL       WIZCHIP_WRITE
;;;480    			//-- Set MAC Address
;;;481    			setLLAR(WIZ_LLA);
000d02  4f6f              LDR      r7,|L1.3776|
000d04  2210              MOVS     r2,#0x10
000d06  a911              ADD      r1,sp,#0x44
000d08  4638              MOV      r0,r7
000d0a  f7fffffe          BL       WIZCHIP_WRITE_BUF
;;;482    			NETLOCK();
000d0e  21c5              MOVS     r1,#0xc5
000d10  4628              MOV      r0,r5
000d12  f7fffffe          BL       WIZCHIP_WRITE
;;;483    			getLLAR(tmp_array);
000d16  2210              MOVS     r2,#0x10
000d18  a90d              ADD      r1,sp,#0x34
000d1a  4638              MOV      r0,r7
000d1c  f7fffffe          BL       WIZCHIP_READ_BUF
;;;484    			#if (AutoConfig_debug == debug_on)
;;;485    			printf("\r\nLLA : %.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X",
000d20  f89d0040          LDRB     r0,[sp,#0x40]
000d24  ad09              ADD      r5,sp,#0x24
000d26  f89d3043          LDRB     r3,[sp,#0x43]
000d2a  f89d2042          LDRB     r2,[sp,#0x42]
000d2e  f89d1041          LDRB     r1,[sp,#0x41]
000d32  e885000f          STM      r5,{r0-r3}
000d36  f89d003c          LDRB     r0,[sp,#0x3c]
000d3a  ad05              ADD      r5,sp,#0x14
000d3c  f89d303f          LDRB     r3,[sp,#0x3f]
000d40  f89d203e          LDRB     r2,[sp,#0x3e]
000d44  f89d103d          LDRB     r1,[sp,#0x3d]
000d48  e885000f          STM      r5,{r0-r3}
000d4c  f89d0038          LDRB     r0,[sp,#0x38]
000d50  ad01              ADD      r5,sp,#4
000d52  f89d303b          LDRB     r3,[sp,#0x3b]
000d56  f89d203a          LDRB     r2,[sp,#0x3a]
000d5a  f89d1039          LDRB     r1,[sp,#0x39]
000d5e  e885000f          STM      r5,{r0-r3}
000d62  f89d0037          LDRB     r0,[sp,#0x37]
000d66  9000              STR      r0,[sp,#0]
000d68  f89d3036          LDRB     r3,[sp,#0x36]
000d6c  f89d2035          LDRB     r2,[sp,#0x35]
000d70  f89d1034          LDRB     r1,[sp,#0x34]
000d74  4853              LDR      r0,|L1.3780|
000d76  f7fffffe          BL       __2printf
;;;486                        tmp_array[0], tmp_array[1], tmp_array[2], tmp_array[3],
;;;487                        tmp_array[4], tmp_array[5], tmp_array[6], tmp_array[7],
;;;488                        tmp_array[8], tmp_array[9], tmp_array[10],tmp_array[11],
;;;489                        tmp_array[12],tmp_array[13],tmp_array[14],tmp_array[15]);
;;;490    			#endif
;;;491    			result = SUCCESS;
000d7a  2500              MOVS     r5,#0
000d7c  e005              B        |L1.3466|
                  |L1.3454|
;;;492    		}
;;;493    		else if(flags&SLIR_NS)
000d7e  0760              LSLS     r0,r4,#29
000d80  d503              BPL      |L1.3466|
;;;494    		{
;;;495    			#if (AutoConfig_debug == debug_on)
;;;496    			printf("\nReceived NA !!! DAD FAILED\r\n");
000d82  a051              ADR      r0,|L1.3784|
000d84  f7fffffe          BL       __2printf
;;;497    			#endif
;;;498    			result = ERROR_DAD_FAIL;
000d88  25ff              MOVS     r5,#0xff
                  |L1.3466|
;;;499    		}
;;;500    	}
;;;501    	while(!((flags&SLIR_TOUT)||(flags&SLIR_NS)));
000d8a  f0140f84          TST      r4,#0x84
000d8e  d0aa              BEQ      |L1.3302|
;;;502            
;;;503        setSLIRCLR(flags);
000d90  4621              MOV      r1,r4
000d92  4855              LDR      r0,|L1.3816|
000d94  f7fffffe          BL       WIZCHIP_WRITE
;;;504    	
;;;505    	return result;
;;;506    }
000d98  b015              ADD      sp,sp,#0x54
000d9a  4628              MOV      r0,r5                 ;505
000d9c  bdf0              POP      {r4-r7,pc}
;;;507    
                          ENDP

000d9e  0000              DCW      0x0000
                  |L1.3488|
000da0  4d4f203a          DCB      "MO : %x \r\n",0
000da4  20257820
000da8  0d0a00  
000dab  00                DCB      0
                  |L1.3500|
000dac  0a0a0a3d          DCB      "\n\n\n================================================="
000db0  3d3d3d3d
000db4  3d3d3d3d
000db8  3d3d3d3d
000dbc  3d3d3d3d
000dc0  3d3d3d3d
000dc4  3d3d3d3d
000dc8  3d3d3d3d
000dcc  3d3d3d3d
000dd0  3d3d3d3d
000dd4  3d3d3d3d
000dd8  3d3d3d3d
000ddc  3d3d3d3d
000de0  0d0a00            DCB      "\r\n",0
000de3  00                DCB      0
                  |L1.3556|
000de4  3d3d3d3d          DCB      "==================== DAD_NS_Send ================\r\n",0
000de8  3d3d3d3d
000dec  3d3d3d3d
000df0  3d3d3d3d
000df4  3d3d3d3d
000df8  20444144
000dfc  5f4e535f
000e00  53656e64
000e04  203d3d3d
000e08  3d3d3d3d
000e0c  3d3d3d3d
000e10  3d3d3d3d
000e14  3d0d0a00
                  |L1.3608|
000e18  3d3d3d3d          DCB      "=================================================\r\n",0
000e1c  3d3d3d3d
000e20  3d3d3d3d
000e24  3d3d3d3d
000e28  3d3d3d3d
000e2c  3d3d3d3d
000e30  3d3d3d3d
000e34  3d3d3d3d
000e38  3d3d3d3d
000e3c  3d3d3d3d
000e40  3d3d3d3d
000e44  3d3d3d3d
000e48  3d0d0a00
                  |L1.3660|
                          DCD      0x60420800
                  |L1.3664|
                          DCD      0x60420900
                  |L1.3668|
                          DCD      0x60420c00
                  |L1.3672|
                          DCD      0x60418000
                  |L1.3676|
                          DCD      0x60213000
                  |L1.3680|
000e60  4552524f          DCB      "ERROR : RQCMD is not clear %x \r\n",0
000e64  52203a20
000e68  5251434d
000e6c  44206973
000e70  206e6f74
000e74  20636c65
000e78  61722025
000e7c  78200d0a
000e80  00      
000e81  00                DCB      0
000e82  00                DCB      0
000e83  00                DCB      0
                  |L1.3716|
000e84  57616974          DCB      "Wait RQIR.....\r\n",0
000e88  20525149
000e8c  522e2e2e
000e90  2e2e0d0a
000e94  00      
000e95  00                DCB      0
000e96  00                DCB      0
000e97  00                DCB      0
                  |L1.3736|
                          DCD      0x60210200
                  |L1.3740|
000e9c  0a54696d          DCB      "\nTimeout !!! DAD SUCCESSED\r\n",0
000ea0  656f7574
000ea4  20212121
000ea8  20444144
000eac  20535543
000eb0  43455353
000eb4  45440d0a
000eb8  00      
000eb9  00                DCB      0
000eba  00                DCB      0
000ebb  00                DCB      0
                  |L1.3772|
                          DCD      0x6041f500
                  |L1.3776|
                          DCD      0x60414000
                  |L1.3780|
                          DCD      ||.conststring||+0x250
                  |L1.3784|
000ec8  0a526563          DCB      "\nReceived NA !!! DAD FAILED\r\n",0
000ecc  65697665
000ed0  64204e41
000ed4  20212121
000ed8  20444144
000edc  20464149
000ee0  4c45440d
000ee4  0a00    
000ee6  00                DCB      0
000ee7  00                DCB      0
                  |L1.3816|
                          DCD      0x60212800

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  796f7572          DCB      "your Link Local IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%."
000004  204c696e
000008  6b204c6f
00000c  63616c20
000010  49502069
000014  7320252e
000018  3278252e
00001c  32783a25
000020  2e327825
000024  2e32783a
000028  252e3278
00002c  252e3278
000030  3a252e32
000034  78252e  
000037  32783a25          DCB      "2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n",0
00003b  2e327825
00003f  2e32783a
000043  252e3278
000047  252e3278
00004b  3a252e32
00004f  78252e32
000053  783a252e
000057  3278252e
00005b  3278200d
00005f  0a00    
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
000064  796f7572          DCB      "your Global IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%"
000068  20476c6f
00006c  62616c20
000070  49502069
000074  7320252e
000078  3278252e
00007c  32783a25
000080  2e327825
000084  2e32783a
000088  252e3278
00008c  252e3278
000090  3a252e32
000094  78252e32
000098  783a25  
00009b  2e327825          DCB      ".2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n",0
00009f  2e32783a
0000a3  252e3278
0000a7  252e3278
0000ab  3a252e32
0000af  78252e32
0000b3  783a252e
0000b7  3278252e
0000bb  3278200d
0000bf  0a00    
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0
0000c4  796f7572          DCB      "your Gateway IP is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:"
0000c8  20476174
0000cc  65776179
0000d0  20495020
0000d4  69732025
0000d8  2e327825
0000dc  2e32783a
0000e0  252e3278
0000e4  252e3278
0000e8  3a252e32
0000ec  78252e32
0000f0  783a252e
0000f4  3278252e
0000f8  32783a  
0000fb  252e3278          DCB      "%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n",0
0000ff  252e3278
000103  3a252e32
000107  78252e32
00010b  783a252e
00010f  3278252e
000113  32783a25
000117  2e327825
00011b  2e327820
00011f  0d0a00  
000122  00                DCB      0
000123  00                DCB      0
000124  796f7572          DCB      "your DNSv6 is %.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%.2x:%.2x%"
000128  20444e53
00012c  76362069
000130  7320252e
000134  3278252e
000138  32783a25
00013c  2e327825
000140  2e32783a
000144  252e3278
000148  252e3278
00014c  3a252e32
000150  78252e32
000154  783a252e
000158  327825  
00015b  2e32783a          DCB      ".2x:%.2x%.2x:%.2x%.2x:%.2x%.2x \r\n",0
00015f  252e3278
000163  252e3278
000167  3a252e32
00016b  78252e32
00016f  783a252e
000173  3278252e
000177  3278200d
00017b  0a00    
00017d  00                DCB      0
00017e  00                DCB      0
00017f  00                DCB      0
000180  0a0a0a3d          DCB      "\n\n\n================================================="
000184  3d3d3d3d
000188  3d3d3d3d
00018c  3d3d3d3d
000190  3d3d3d3d
000194  3d3d3d3d
000198  3d3d3d3d
00019c  3d3d3d3d
0001a0  3d3d3d3d
0001a4  3d3d3d3d
0001a8  3d3d3d3d
0001ac  3d3d3d3d
0001b0  3d3d3d3d
0001b4  3d3d3d3d          DCB      "===============\r\n",0
0001b8  3d3d3d3d
0001bc  3d3d3d3d
0001c0  3d3d3d0d
0001c4  0a00    
0001c6  00                DCB      0
0001c7  00                DCB      0
0001c8  3d3d3d3d          DCB      "==================== RQ_AUTO_RS_Send TEST_START ======="
0001cc  3d3d3d3d
0001d0  3d3d3d3d
0001d4  3d3d3d3d
0001d8  3d3d3d3d
0001dc  2052515f
0001e0  4155544f
0001e4  5f52535f
0001e8  53656e64
0001ec  20544553
0001f0  545f5354
0001f4  41525420
0001f8  3d3d3d3d
0001fc  3d3d3d  
0001ff  3d3d3d3d          DCB      "=========\r\n",0
000203  3d3d3d3d
000207  3d0d0a00
00020b  00                DCB      0
00020c  3d3d3d3d          DCB      "======================================================="
000210  3d3d3d3d
000214  3d3d3d3d
000218  3d3d3d3d
00021c  3d3d3d3d
000220  3d3d3d3d
000224  3d3d3d3d
000228  3d3d3d3d
00022c  3d3d3d3d
000230  3d3d3d3d
000234  3d3d3d3d
000238  3d3d3d3d
00023c  3d3d3d3d
000240  3d3d3d  
000243  3d3d3d3d          DCB      "=========\r\n",0
000247  3d3d3d3d
00024b  3d0d0a00
00024f  00                DCB      0
000250  0d0a4c4c          DCB      "\r\nLLA : %.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X:%.2X%.2X:"
000254  41203a20
000258  252e3258
00025c  252e3258
000260  3a252e32
000264  58252e32
000268  583a252e
00026c  3258252e
000270  32583a25
000274  2e325825
000278  2e32583a
00027c  252e3258
000280  252e3258
000284  3a      
000285  252e3258          DCB      "%.2X%.2X:%.2X%.2X:%.2X%.2X",0
000289  252e3258
00028d  3a252e32
000291  58252e32
000295  583a252e
000299  3258252e
00029d  325800  
