; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\objects\stm32f4xx_exti.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\test_[SLAAC-RDNSS] -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\io6Library\Application\loopback -I..\..\Libraries\io6Library\Ethernet -I..\..\Libraries\io6Library\Ethernet\W6100 -I..\..\Libraries\io6Library\Internet\DHCP -I..\..\Libraries\io6Library\Internet\DNS -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\io6Library\Internet\DHCP6 -I.\RTE\_Target_1 -Ic:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ic:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F4XX -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\stm32f4xx_exti.crf ..\..\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;102      */
;;;103    void EXTI_DeInit(void)
000000  4937              LDR      r1,|L1.224|
;;;104    {
;;;105      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;106      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;107      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;108      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;109      EXTI->PR = 0x007FFFFF;
000012  4933              LDR      r1,|L1.224|
000014  4833              LDR      r0,|L1.228|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;110    }
00001a  4770              BX       lr
;;;111    
                          ENDP

                  EXTI_Init PROC
;;;118      */
;;;119    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
00001c  b530              PUSH     {r4,r5,lr}
;;;120    {
;;;121      uint32_t tmp = 0;
;;;122    
;;;123      /* Check the parameters */
;;;124      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;125      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;126      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;127      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;128    
;;;129      tmp = (uint32_t)EXTI_BASE;
00001e  4a30              LDR      r2,|L1.224|
;;;130         
;;;131      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000020  7983              LDRB     r3,[r0,#6]
000022  6801              LDR      r1,[r0,#0]            ;120
000024  b353              CBZ      r3,|L1.124|
;;;132      {
;;;133        /* Clear EXTI line configuration */
;;;134        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000026  6813              LDR      r3,[r2,#0]
000028  438b              BICS     r3,r3,r1
00002a  6013              STR      r3,[r2,#0]
;;;135        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
00002c  1d11              ADDS     r1,r2,#4
00002e  680b              LDR      r3,[r1,#0]
000030  6804              LDR      r4,[r0,#0]
000032  43a3              BICS     r3,r3,r4
000034  600b              STR      r3,[r1,#0]
;;;136        
;;;137        tmp += EXTI_InitStruct->EXTI_Mode;
000036  7901              LDRB     r1,[r0,#4]
000038  4411              ADD      r1,r1,r2
;;;138    
;;;139        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00003a  680b              LDR      r3,[r1,#0]
00003c  6804              LDR      r4,[r0,#0]
00003e  4323              ORRS     r3,r3,r4
000040  600b              STR      r3,[r1,#0]
;;;140    
;;;141        /* Clear Rising Falling edge configuration */
;;;142        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000042  4b27              LDR      r3,|L1.224|
000044  3308              ADDS     r3,r3,#8
000046  6819              LDR      r1,[r3,#0]
000048  6804              LDR      r4,[r0,#0]
00004a  43a1              BICS     r1,r1,r4
00004c  6019              STR      r1,[r3,#0]
;;;143        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00004e  1d1c              ADDS     r4,r3,#4
000050  6821              LDR      r1,[r4,#0]
000052  6805              LDR      r5,[r0,#0]
000054  43a9              BICS     r1,r1,r5
000056  6021              STR      r1,[r4,#0]
;;;144        
;;;145        /* Select the trigger for the selected external interrupts */
;;;146        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000058  7941              LDRB     r1,[r0,#5]
00005a  2910              CMP      r1,#0x10
00005c  d005              BEQ      |L1.106|
;;;147        {
;;;148          /* Rising Falling edge */
;;;149          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;150          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;151        }
;;;152        else
;;;153        {
;;;154          tmp = (uint32_t)EXTI_BASE;
;;;155          tmp += EXTI_InitStruct->EXTI_Trigger;
00005e  4411              ADD      r1,r1,r2
;;;156    
;;;157          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000060  680a              LDR      r2,[r1,#0]
000062  6800              LDR      r0,[r0,#0]
000064  4302              ORRS     r2,r2,r0
000066  600a              STR      r2,[r1,#0]
;;;158        }
;;;159      }
;;;160      else
;;;161      {
;;;162        tmp += EXTI_InitStruct->EXTI_Mode;
;;;163    
;;;164        /* Disable the selected external lines */
;;;165        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;166      }
;;;167    }
000068  bd30              POP      {r4,r5,pc}
                  |L1.106|
00006a  6819              LDR      r1,[r3,#0]            ;149
00006c  6802              LDR      r2,[r0,#0]            ;149
00006e  4311              ORRS     r1,r1,r2              ;149
000070  6019              STR      r1,[r3,#0]            ;149
000072  6821              LDR      r1,[r4,#0]            ;150
000074  6800              LDR      r0,[r0,#0]            ;150
000076  4301              ORRS     r1,r1,r0              ;150
000078  6021              STR      r1,[r4,#0]            ;150
00007a  bd30              POP      {r4,r5,pc}
                  |L1.124|
00007c  7900              LDRB     r0,[r0,#4]            ;162
00007e  4410              ADD      r0,r0,r2              ;162
000080  6802              LDR      r2,[r0,#0]            ;165
000082  438a              BICS     r2,r2,r1              ;165
000084  6002              STR      r2,[r0,#0]            ;165
000086  bd30              POP      {r4,r5,pc}
;;;168    
                          ENDP

                  EXTI_StructInit PROC
;;;174      */
;;;175    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000088  2100              MOVS     r1,#0
;;;176    {
;;;177      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;178      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
00008a  6001              STR      r1,[r0,#0]
00008c  7101              STRB     r1,[r0,#4]
;;;179      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
00008e  220c              MOVS     r2,#0xc
000090  7142              STRB     r2,[r0,#5]
;;;180      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
000092  7181              STRB     r1,[r0,#6]
;;;181    }
000094  4770              BX       lr
;;;182    
                          ENDP

                  EXTI_GenerateSWInterrupt PROC
;;;189      */
;;;190    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000096  4912              LDR      r1,|L1.224|
;;;191    {
;;;192      /* Check the parameters */
;;;193      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;194      
;;;195      EXTI->SWIER |= EXTI_Line;
000098  3110              ADDS     r1,r1,#0x10
00009a  680a              LDR      r2,[r1,#0]
00009c  4302              ORRS     r2,r2,r0
00009e  600a              STR      r2,[r1,#0]
;;;196    }
0000a0  4770              BX       lr
;;;197    
                          ENDP

                  EXTI_GetFlagStatus PROC
;;;219      */
;;;220    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
0000a2  4601              MOV      r1,r0
;;;221    {
;;;222      FlagStatus bitstatus = RESET;
;;;223      /* Check the parameters */
;;;224      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;225      
;;;226      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
0000a4  4a0e              LDR      r2,|L1.224|
0000a6  2000              MOVS     r0,#0                 ;222
0000a8  3214              ADDS     r2,r2,#0x14
0000aa  6812              LDR      r2,[r2,#0]
0000ac  420a              TST      r2,r1
0000ae  d000              BEQ      |L1.178|
;;;227      {
;;;228        bitstatus = SET;
0000b0  2001              MOVS     r0,#1
                  |L1.178|
;;;229      }
;;;230      else
;;;231      {
;;;232        bitstatus = RESET;
;;;233      }
;;;234      return bitstatus;
;;;235    }
0000b2  4770              BX       lr
;;;236    
                          ENDP

                  EXTI_ClearFlag PROC
;;;242      */
;;;243    void EXTI_ClearFlag(uint32_t EXTI_Line)
0000b4  490a              LDR      r1,|L1.224|
;;;244    {
;;;245      /* Check the parameters */
;;;246      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;247      
;;;248      EXTI->PR = EXTI_Line;
0000b6  3114              ADDS     r1,r1,#0x14
0000b8  6008              STR      r0,[r1,#0]
;;;249    }
0000ba  4770              BX       lr
;;;250    
                          ENDP

                  EXTI_GetITStatus PROC
;;;256      */
;;;257    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
0000bc  4a08              LDR      r2,|L1.224|
;;;258    {
0000be  4601              MOV      r1,r0
;;;259      ITStatus bitstatus = RESET;
0000c0  2000              MOVS     r0,#0
;;;260      uint32_t enablestatus = 0;
;;;261      /* Check the parameters */
;;;262      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;263      
;;;264      enablestatus =  EXTI->IMR & EXTI_Line;
0000c2  6812              LDR      r2,[r2,#0]
;;;265      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
0000c4  4b06              LDR      r3,|L1.224|
0000c6  400a              ANDS     r2,r2,r1              ;264
0000c8  3314              ADDS     r3,r3,#0x14
0000ca  681b              LDR      r3,[r3,#0]
0000cc  420b              TST      r3,r1
0000ce  d002              BEQ      |L1.214|
0000d0  2a00              CMP      r2,#0
0000d2  d000              BEQ      |L1.214|
;;;266      {
;;;267        bitstatus = SET;
0000d4  2001              MOVS     r0,#1
                  |L1.214|
;;;268      }
;;;269      else
;;;270      {
;;;271        bitstatus = RESET;
;;;272      }
;;;273      return bitstatus;
;;;274    }
0000d6  4770              BX       lr
;;;275    
                          ENDP

                  EXTI_ClearITPendingBit PROC
;;;281      */
;;;282    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
0000d8  4901              LDR      r1,|L1.224|
;;;283    {
;;;284      /* Check the parameters */
;;;285      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;286      
;;;287      EXTI->PR = EXTI_Line;
0000da  3114              ADDS     r1,r1,#0x14
0000dc  6008              STR      r0,[r1,#0]
;;;288    }
0000de  4770              BX       lr
;;;289    
                          ENDP

                  |L1.224|
                          DCD      0x40013c00
                  |L1.228|
                          DCD      0x007fffff

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
