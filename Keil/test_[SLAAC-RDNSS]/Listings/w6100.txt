; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\objects\w6100.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\w6100.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\test_[SLAAC-RDNSS] -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\io6Library\Application\loopback -I..\..\Libraries\io6Library\Ethernet -I..\..\Libraries\io6Library\Ethernet\W6100 -I..\..\Libraries\io6Library\Internet\DHCP -I..\..\Libraries\io6Library\Internet\DNS -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\io6Library\Internet\DHCP6 -I.\RTE\_Target_1 -Ic:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Ic:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=525 -DSTM32F407xx -DSTM32F4XX -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\w6100.crf ..\..\Libraries\io6Library\Ethernet\W6100\w6100.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WIZCHIP_WRITE PROC
;;;53     //////////////////////////////////////////////////
;;;54     void WIZCHIP_WRITE(uint32_t AddrSel, uint8_t wb )
000000  b538              PUSH     {r3-r5,lr}
;;;55     {
;;;56        uint8_t tAD[4];
;;;57        tAD[0] = (uint8_t)((AddrSel & 0x00FF0000) >> 16);
000002  0c02              LSRS     r2,r0,#16
000004  f88d2000          STRB     r2,[sp,#0]
;;;58        tAD[1] = (uint8_t)((AddrSel & 0x0000FF00) >> 8);
000008  0a02              LSRS     r2,r0,#8
00000a  f88d2001          STRB     r2,[sp,#1]
;;;59        tAD[2] = (uint8_t)(AddrSel & 0x000000ff);
;;;60        tAD[3] = wb;
;;;61     
;;;62        WIZCHIP_CRITICAL_ENTER();
00000e  4c92              LDR      r4,|L1.600|
000010  f88d0002          STRB     r0,[sp,#2]            ;59
000014  f88d1003          STRB     r1,[sp,#3]            ;60
000018  68a0              LDR      r0,[r4,#8]  ; WIZCHIP
00001a  4780              BLX      r0
;;;63        WIZCHIP.CS._s_e_l_e_c_t_();
00001c  6920              LDR      r0,[r4,#0x10]  ; WIZCHIP
00001e  4780              BLX      r0
;;;64     
;;;65     #if( (_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_SPI_VDM_))
;;;66        tAD[2] |= (_W6100_SPI_WRITE_ | _W6100_SPI_OP_);
;;;67        WIZCHIP.IF.SPI._write_byte_buf(tAD, 4);
;;;68     
;;;69     #elif ( (_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_BUS_INDIR_) )
;;;70        WIZCHIP.IF.BUS._write_data_buf(IDM_AR0, tAD, 4, 1);
000020  2301              MOVS     r3,#1
000022  6a65              LDR      r5,[r4,#0x24]  ; WIZCHIP
000024  2204              MOVS     r2,#4
000026  4669              MOV      r1,sp
000028  f04f40c0          MOV      r0,#0x60000000
00002c  47a8              BLX      r5
;;;71     #else
;;;72        #error "Unknown _WIZCHIP_IO_MODE_ in W5100. !!!"
;;;73     #endif
;;;74     
;;;75        WIZCHIP.CS._d_e_s_e_l_e_c_t_();
00002e  6960              LDR      r0,[r4,#0x14]  ; WIZCHIP
000030  4780              BLX      r0
;;;76        WIZCHIP_CRITICAL_EXIT();
000032  68e0              LDR      r0,[r4,#0xc]  ; WIZCHIP
000034  4780              BLX      r0
;;;77     }
000036  bd38              POP      {r3-r5,pc}
;;;78     
                          ENDP

                  WIZCHIP_READ PROC
;;;79     uint8_t  WIZCHIP_READ(uint32_t AddrSel)
000038  b538              PUSH     {r3-r5,lr}
;;;80     {
;;;81        uint8_t ret;
;;;82        uint8_t tAD[3];
;;;83        tAD[0] = (uint8_t)((AddrSel & 0x00FF0000) >> 16);
00003a  0c01              LSRS     r1,r0,#16
00003c  f88d1000          STRB     r1,[sp,#0]
;;;84        tAD[1] = (uint8_t)((AddrSel & 0x0000FF00) >> 8);
000040  0a01              LSRS     r1,r0,#8
;;;85        tAD[2] = (uint8_t)(AddrSel & 0x000000ff);
;;;86     
;;;87        WIZCHIP_CRITICAL_ENTER();
000042  4c85              LDR      r4,|L1.600|
000044  f88d1001          STRB     r1,[sp,#1]            ;84
000048  f88d0002          STRB     r0,[sp,#2]            ;85
00004c  68a0              LDR      r0,[r4,#8]  ; WIZCHIP
00004e  4780              BLX      r0
;;;88        WIZCHIP.CS._s_e_l_e_c_t_();
000050  6920              LDR      r0,[r4,#0x10]  ; WIZCHIP
000052  4780              BLX      r0
;;;89     
;;;90     #if( (_WIZCHIP_IO_MODE_ ==  _WIZCHIP_IO_MODE_SPI_VDM_))
;;;91        tAD[2] |= (_W6100_SPI_READ_ | _W6100_SPI_OP_);
;;;92        WIZCHIP.IF.SPI._write_byte_buf(tAD, 3);
;;;93        ret = WIZCHIP.IF.SPI._read_byte();
;;;94     #elif ( (_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_BUS_INDIR_) )
;;;95        WIZCHIP.IF.BUS._write_data_buf(IDM_AR0,tAD,3,1);
000054  2301              MOVS     r3,#1
000056  2203              MOVS     r2,#3
000058  6a65              LDR      r5,[r4,#0x24]  ; WIZCHIP
00005a  4669              MOV      r1,sp
00005c  0750              LSLS     r0,r2,#29
00005e  47a8              BLX      r5
;;;96        ret = WIZCHIP.IF.BUS._read_data(IDM_DR);
000060  69a1              LDR      r1,[r4,#0x18]  ; WIZCHIP
000062  487e              LDR      r0,|L1.604|
000064  4788              BLX      r1
;;;97     #else
;;;98        #error "Unknown _WIZCHIP_IO_MODE_ in W6100. !!!"   
;;;99     #endif
;;;100    
;;;101       WIZCHIP.CS._d_e_s_e_l_e_c_t_();
000066  6961              LDR      r1,[r4,#0x14]  ; WIZCHIP
000068  4605              MOV      r5,r0                 ;96
00006a  4788              BLX      r1
;;;102       WIZCHIP_CRITICAL_EXIT();
00006c  68e1              LDR      r1,[r4,#0xc]  ; WIZCHIP
00006e  4788              BLX      r1
;;;103       return ret;
000070  4628              MOV      r0,r5
;;;104    }
000072  bd38              POP      {r3-r5,pc}
;;;105    
                          ENDP

                  WIZCHIP_WRITE_BUF PROC
;;;106    void WIZCHIP_WRITE_BUF(uint32_t AddrSel, uint8_t* pBuf, datasize_t len)
000074  b5f8              PUSH     {r3-r7,lr}
;;;107    {
000076  460e              MOV      r6,r1
;;;108       uint8_t tAD[3];
;;;109       tAD[0] = (uint8_t)((AddrSel & 0x00FF0000) >> 16);
000078  0c01              LSRS     r1,r0,#16
00007a  f88d1000          STRB     r1,[sp,#0]
;;;110       tAD[1] = (uint8_t)((AddrSel & 0x0000FF00) >> 8);
00007e  0a01              LSRS     r1,r0,#8
;;;111       tAD[2] = (uint8_t)(AddrSel & 0x000000ff);
;;;112    
;;;113    
;;;114       WIZCHIP_CRITICAL_ENTER();
000080  4c75              LDR      r4,|L1.600|
000082  f88d1001          STRB     r1,[sp,#1]            ;110
000086  f88d0002          STRB     r0,[sp,#2]            ;111
00008a  68a0              LDR      r0,[r4,#8]  ; WIZCHIP
00008c  4615              MOV      r5,r2                 ;107
00008e  4780              BLX      r0
;;;115       WIZCHIP.CS._s_e_l_e_c_t_();
000090  6920              LDR      r0,[r4,#0x10]  ; WIZCHIP
000092  4780              BLX      r0
;;;116    
;;;117    #if((_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_SPI_VDM_))
;;;118       tAD[2] |= (_W6100_SPI_WRITE_ | _W6100_SPI_OP_);
;;;119    
;;;120       WIZCHIP.IF.SPI._write_byte_buf(tAD, 3);
;;;121       WIZCHIP.IF.SPI._write_byte_buf(pBuf, len);
;;;122    
;;;123    #elif ( (_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_BUS_INDIR_) )
;;;124       WIZCHIP.IF.BUS._write_data_buf(IDM_AR0,tAD, 3, 1);
000094  2301              MOVS     r3,#1
000096  2203              MOVS     r2,#3
000098  6a67              LDR      r7,[r4,#0x24]  ; WIZCHIP
00009a  4669              MOV      r1,sp
00009c  0750              LSLS     r0,r2,#29
00009e  47b8              BLX      r7
;;;125       WIZCHIP.IF.BUS._write_data_buf(IDM_DR,pBuf,len, 0);
0000a0  6a67              LDR      r7,[r4,#0x24]  ; WIZCHIP
0000a2  2300              MOVS     r3,#0
0000a4  462a              MOV      r2,r5
0000a6  4631              MOV      r1,r6
0000a8  486c              LDR      r0,|L1.604|
0000aa  47b8              BLX      r7
;;;126    #else
;;;127       #error "Unknown _WIZCHIP_IO_MODE_ in W6100. !!!!"
;;;128    #endif
;;;129    
;;;130       WIZCHIP.CS._d_e_s_e_l_e_c_t_();
0000ac  6960              LDR      r0,[r4,#0x14]  ; WIZCHIP
0000ae  4780              BLX      r0
;;;131       WIZCHIP_CRITICAL_EXIT();
0000b0  68e0              LDR      r0,[r4,#0xc]  ; WIZCHIP
0000b2  4780              BLX      r0
;;;132    }
0000b4  bdf8              POP      {r3-r7,pc}
;;;133    
                          ENDP

                  WIZCHIP_READ_BUF PROC
;;;134    void WIZCHIP_READ_BUF (uint32_t AddrSel, uint8_t* pBuf, datasize_t len)
0000b6  b5f8              PUSH     {r3-r7,lr}
;;;135    {
0000b8  460e              MOV      r6,r1
;;;136       uint8_t tAD[3];
;;;137       tAD[0] = (uint8_t)((AddrSel & 0x00FF0000) >> 16);
0000ba  0c01              LSRS     r1,r0,#16
0000bc  f88d1000          STRB     r1,[sp,#0]
;;;138       tAD[1] = (uint8_t)((AddrSel & 0x0000FF00) >> 8);
0000c0  0a01              LSRS     r1,r0,#8
;;;139       tAD[2] = (uint8_t)(AddrSel & 0x000000ff);
;;;140    
;;;141       WIZCHIP_CRITICAL_ENTER();
0000c2  4c65              LDR      r4,|L1.600|
0000c4  f88d1001          STRB     r1,[sp,#1]            ;138
0000c8  f88d0002          STRB     r0,[sp,#2]            ;139
0000cc  68a0              LDR      r0,[r4,#8]  ; WIZCHIP
0000ce  4615              MOV      r5,r2                 ;135
0000d0  4780              BLX      r0
;;;142       WIZCHIP.CS._s_e_l_e_c_t_();
0000d2  6920              LDR      r0,[r4,#0x10]  ; WIZCHIP
0000d4  4780              BLX      r0
;;;143    
;;;144    #if((_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_SPI_VDM_))
;;;145       tAD[2] |= (_W6100_SPI_READ_ | _W6100_SPI_OP_);
;;;146       WIZCHIP.IF.SPI._write_byte_buf(tAD,3);
;;;147       WIZCHIP.IF.SPI._read_byte_buf(pBuf, len);
;;;148    #elif ( (_WIZCHIP_IO_MODE_ == _WIZCHIP_IO_MODE_BUS_INDIR_) )
;;;149       WIZCHIP.IF.BUS._write_data_buf(IDM_AR0,tAD,3,1);
0000d6  2301              MOVS     r3,#1
0000d8  2203              MOVS     r2,#3
0000da  6a67              LDR      r7,[r4,#0x24]  ; WIZCHIP
0000dc  4669              MOV      r1,sp
0000de  0750              LSLS     r0,r2,#29
0000e0  47b8              BLX      r7
;;;150       WIZCHIP.IF.BUS._read_data_buf(IDM_DR,pBuf,len,0);
0000e2  6a27              LDR      r7,[r4,#0x20]  ; WIZCHIP
0000e4  2300              MOVS     r3,#0
0000e6  462a              MOV      r2,r5
0000e8  4631              MOV      r1,r6
0000ea  485c              LDR      r0,|L1.604|
0000ec  47b8              BLX      r7
;;;151    #else
;;;152       #error "Unknown _WIZCHIP_IO_MODE_ in W6100. !!!!"
;;;153    #endif
;;;154       WIZCHIP.CS._d_e_s_e_l_e_c_t_();
0000ee  6960              LDR      r0,[r4,#0x14]  ; WIZCHIP
0000f0  4780              BLX      r0
;;;155       WIZCHIP_CRITICAL_EXIT();
0000f2  68e0              LDR      r0,[r4,#0xc]  ; WIZCHIP
0000f4  4780              BLX      r0
;;;156    }
0000f6  bdf8              POP      {r3-r7,pc}
;;;157    
                          ENDP

                  getSn_TX_FSR PROC
;;;158    datasize_t getSn_TX_FSR(uint8_t sn)
0000f8  e92d41f0          PUSH     {r4-r8,lr}
;;;159    {
;;;160       datasize_t prev_val=-1,val=0;
;;;161       do
;;;162       {
;;;163          prev_val = val;
;;;164          val = WIZCHIP_READ(_Sn_TX_FSR_(sn));
0000fc  4a58              LDR      r2,|L1.608|
0000fe  4601              MOV      r1,r0                 ;159
000100  eb021641          ADD      r6,r2,r1,LSL #5
;;;165          val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(_Sn_TX_FSR_(sn),1));
000104  4a57              LDR      r2,|L1.612|
000106  2000              MOVS     r0,#0                 ;160
000108  eb021541          ADD      r5,r2,r1,LSL #5
                  |L1.268|
00010c  4604              MOV      r4,r0                 ;163
00010e  4630              MOV      r0,r6                 ;163
000110  f7fffffe          BL       WIZCHIP_READ
000114  4607              MOV      r7,r0                 ;164
000116  4628              MOV      r0,r5                 ;164
000118  f7fffffe          BL       WIZCHIP_READ
00011c  eb002007          ADD      r0,r0,r7,LSL #8
000120  b200              SXTH     r0,r0
;;;166       }while (val != prev_val);
000122  42a0              CMP      r0,r4
000124  d1f2              BNE      |L1.268|
                  |L1.294|
;;;167       return val;
;;;168    }
000126  e8bd81f0          POP      {r4-r8,pc}
;;;169    
                          ENDP

                  getSn_RX_RSR PROC
;;;170    datasize_t getSn_RX_RSR(uint8_t sn)
00012a  e92d41f0          PUSH     {r4-r8,lr}
;;;171    {
;;;172       datasize_t prev_val=-1,val=0;
;;;173       do
;;;174       {
;;;175          prev_val = val;
;;;176          val = WIZCHIP_READ(_Sn_RX_RSR_(sn));
00012e  4a4e              LDR      r2,|L1.616|
000130  4601              MOV      r1,r0                 ;171
000132  eb021641          ADD      r6,r2,r1,LSL #5
;;;177          val = (val << 8) + WIZCHIP_READ(WIZCHIP_OFFSET_INC(_Sn_RX_RSR_(sn),1));
000136  4a4d              LDR      r2,|L1.620|
000138  2000              MOVS     r0,#0                 ;172
00013a  eb021541          ADD      r5,r2,r1,LSL #5
                  |L1.318|
00013e  4604              MOV      r4,r0                 ;175
000140  4630              MOV      r0,r6                 ;175
000142  f7fffffe          BL       WIZCHIP_READ
000146  4607              MOV      r7,r0                 ;176
000148  4628              MOV      r0,r5                 ;176
00014a  f7fffffe          BL       WIZCHIP_READ
00014e  eb002007          ADD      r0,r0,r7,LSL #8
000152  b200              SXTH     r0,r0
;;;178       }while (val != prev_val);
000154  42a0              CMP      r0,r4
000156  d1f2              BNE      |L1.318|
;;;179       return val;
;;;180    }
000158  e7e5              B        |L1.294|
;;;181    
                          ENDP

                  wiz_send_data PROC
;;;182    void wiz_send_data(uint8_t sn, uint8_t *wizdata, datasize_t len)
00015a  e92d47f0          PUSH     {r4-r10,lr}
;;;183    {
00015e  4604              MOV      r4,r0
;;;184       datasize_t ptr = 0;
;;;185       uint32_t addrsel = 0;
;;;186       ptr = getSn_TX_WR(sn);
000160  4843              LDR      r0,|L1.624|
000162  4690              MOV      r8,r2                 ;183
000164  eb001644          ADD      r6,r0,r4,LSL #5
000168  4689              MOV      r9,r1                 ;183
00016a  4630              MOV      r0,r6
00016c  f7fffffe          BL       WIZCHIP_READ
000170  4607              MOV      r7,r0
000172  4840              LDR      r0,|L1.628|
000174  eb001544          ADD      r5,r0,r4,LSL #5
000178  4628              MOV      r0,r5
00017a  f7fffffe          BL       WIZCHIP_READ
00017e  eb072000          ADD      r0,r7,r0,LSL #8
000182  b207              SXTH     r7,r0
;;;187       addrsel = ((uint32_t)ptr << 8) + WIZCHIP_TXBUF_BLOCK(sn);
000184  0238              LSLS     r0,r7,#8
000186  eb001044          ADD      r0,r0,r4,LSL #5
;;;188       WIZCHIP_WRITE_BUF(addrsel,wizdata, len);
00018a  4642              MOV      r2,r8
00018c  4649              MOV      r1,r9
00018e  3010              ADDS     r0,r0,#0x10
000190  f7fffffe          BL       WIZCHIP_WRITE_BUF
;;;189       ptr += len;
000194  eb070408          ADD      r4,r7,r8
;;;190       setSn_TX_WR(sn,ptr);
000198  4628              MOV      r0,r5
00019a  f3c42107          UBFX     r1,r4,#8,#8
00019e  f7fffffe          BL       WIZCHIP_WRITE
0001a2  b2e1              UXTB     r1,r4
0001a4  4630              MOV      r0,r6
0001a6  e8bd47f0          POP      {r4-r10,lr}
0001aa  e7fe              B        WIZCHIP_WRITE
;;;191    }
;;;192    
                          ENDP

                  wiz_recv_data PROC
;;;193    void wiz_recv_data(uint8_t sn, uint8_t *wizdata, datasize_t len)
0001ac  e92d47f0          PUSH     {r4-r10,lr}
;;;194    {
0001b0  ea5f0802          MOVS     r8,r2
0001b4  4689              MOV      r9,r1
0001b6  4604              MOV      r4,r0
0001b8  d023              BEQ      |L1.514|
;;;195       datasize_t ptr = 0;
;;;196       uint32_t addrsel = 0;
;;;197       if(len == 0) return;
;;;198       ptr = getSn_RX_RD(sn);
0001ba  482f              LDR      r0,|L1.632|
0001bc  eb001644          ADD      r6,r0,r4,LSL #5
0001c0  4630              MOV      r0,r6
0001c2  f7fffffe          BL       WIZCHIP_READ
0001c6  4607              MOV      r7,r0
0001c8  482c              LDR      r0,|L1.636|
0001ca  eb001544          ADD      r5,r0,r4,LSL #5
0001ce  4628              MOV      r0,r5
0001d0  f7fffffe          BL       WIZCHIP_READ
0001d4  eb072000          ADD      r0,r7,r0,LSL #8
0001d8  b207              SXTH     r7,r0
;;;199       addrsel = ((uint32_t)ptr << 8) + WIZCHIP_RXBUF_BLOCK(sn);
0001da  0238              LSLS     r0,r7,#8
0001dc  eb001044          ADD      r0,r0,r4,LSL #5
;;;200       WIZCHIP_READ_BUF(addrsel, wizdata, len);
0001e0  4642              MOV      r2,r8
0001e2  4649              MOV      r1,r9
0001e4  3018              ADDS     r0,r0,#0x18
0001e6  f7fffffe          BL       WIZCHIP_READ_BUF
;;;201       ptr += len;
0001ea  eb070408          ADD      r4,r7,r8
;;;202       setSn_RX_RD(sn,ptr);
0001ee  4628              MOV      r0,r5
0001f0  f3c42107          UBFX     r1,r4,#8,#8
0001f4  f7fffffe          BL       WIZCHIP_WRITE
0001f8  b2e1              UXTB     r1,r4
0001fa  4630              MOV      r0,r6
0001fc  e8bd47f0          POP      {r4-r10,lr}
000200  e7fe              B        WIZCHIP_WRITE
                  |L1.514|
;;;203    }
000202  e8bd87f0          POP      {r4-r10,pc}
;;;204    
                          ENDP

                  wiz_recv_ignore PROC
;;;205    void wiz_recv_ignore(uint8_t sn, datasize_t len)
000206  e92d41f0          PUSH     {r4-r8,lr}
;;;206    {
00020a  4604              MOV      r4,r0
;;;207       setSn_RX_RD(sn,getSn_RX_RD(sn)+len);
00020c  481a              LDR      r0,|L1.632|
00020e  460e              MOV      r6,r1                 ;206
000210  eb001544          ADD      r5,r0,r4,LSL #5
000214  4628              MOV      r0,r5
000216  f7fffffe          BL       WIZCHIP_READ
00021a  4607              MOV      r7,r0
00021c  4817              LDR      r0,|L1.636|
00021e  eb001444          ADD      r4,r0,r4,LSL #5
000222  4620              MOV      r0,r4
000224  f7fffffe          BL       WIZCHIP_READ
000228  eb072000          ADD      r0,r7,r0,LSL #8
00022c  4430              ADD      r0,r0,r6
00022e  f3c02107          UBFX     r1,r0,#8,#8
000232  4620              MOV      r0,r4
000234  f7fffffe          BL       WIZCHIP_WRITE
000238  4628              MOV      r0,r5
00023a  f7fffffe          BL       WIZCHIP_READ
00023e  4607              MOV      r7,r0
000240  4620              MOV      r0,r4
000242  f7fffffe          BL       WIZCHIP_READ
000246  eb072000          ADD      r0,r7,r0,LSL #8
00024a  4430              ADD      r0,r0,r6
00024c  b2c1              UXTB     r1,r0
00024e  4628              MOV      r0,r5
000250  e8bd41f0          POP      {r4-r8,lr}
000254  e7fe              B        WIZCHIP_WRITE
;;;208    }
;;;209    
                          ENDP

000256  0000              DCW      0x0000
                  |L1.600|
                          DCD      WIZCHIP
                  |L1.604|
                          DCD      0x60000003
                  |L1.608|
                          DCD      0x60020408
                  |L1.612|
                          DCD      0x60020508
                  |L1.616|
                          DCD      0x60022408
                  |L1.620|
                          DCD      0x60022508
                  |L1.624|
                          DCD      0x60020d08
                  |L1.628|
                          DCD      0x60020c08
                  |L1.632|
                          DCD      0x60022908
                  |L1.636|
                          DCD      0x60022808
